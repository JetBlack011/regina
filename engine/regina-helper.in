#!/bin/bash
#
# Regina - A Normal Surface Theory Calculator
# Miscellaneous helper utility
#
# Copyright (c) 2023, Ben Burton
# For further details contact Ben Burton (bab@debian.org).
#
# Usage: regina-helper <action> [args...]
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# As an exception, when this program is distributed through (i) the
# App Store by Apple Inc.; (ii) the Mac App Store by Apple Inc.; or
# (iii) Google Play by Google Inc., then that store may impose any
# digital rights management, device limits and/or redistribution
# restrictions that are required by its terms of service.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this program; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
# MA 02110-1301, USA.
#
set -e

progdir="`dirname "$0"`"

# Determine the installation type.
install_type='@REGINA_INSTALL_TYPE@'
if [ -f "$progdir/cmake_install.cmake" -a \
    -f "$progdir/../CMakeCache.txt" ]; then
  install_type=Source
fi

usage()
{
  cat <<__END__
Usage: $0 <action> [args...]
       $0 <action> --help

Available actions:
    test        : run Regina's C++ test suite
    cpp         : write a sample C++ program and Makefile
    installtype : identify the type of Regina installation
    help        : display this help
__END__
}

if [ -z "$1" ]; then
  usage
  exit 1
fi
action="$1"
shift
args="$@"

has_help=
for i in "$@"; do
  if [ "$i" = "--help" ]; then
    has_help=1
    break
  fi
done

case "$action" in
  # -------------------- help ---------------------
  help )
    usage
    ;;
  test )
    if [ "$has_help" = 1 ]; then
      cat <<__END__
Usage: $0 test

Runs Regina's C++ test suite.
__END__
      exit 0
    fi
    if [ "$install_type" = Source ]; then
      echo "Running C++ test suite directly from the source tree."
      echo
      "$progdir/testsuite/regina-testsuite"
    else
      '@BASH_CMAKE_INSTALL_PREFIX@'/libexec/regina-testsuite
    fi
    ;;
  # -------------------- cpp ---------------------
  cpp | cc )
    if [ "$has_help" = 1 ]; then
      cat <<__END__
Usage: $0 { cpp | cc } [-f, --force] [-r, --rpath]

Writes a sample C++ program that uses Regina, as well as a corresponding
Makefile, in the current directory.

The C++ filename extension will be whichever action you passed (cpp or cc).

Optional arguments:
    -f, --force : Overwrite any existing files.
    -r, --rpath : Always include an rpath option in the Makefile (useful when
                  your Regina installation is not on the standard library path).
                  By default, an rpath option will only be added if you are
                  running directly out of Regina's source tree.
__END__
      exit 0
    fi

    force=
    rpath=
    for i in "$@"; do
      if [ "$i" = '-f' -o "$i" = '--force' ]; then
        force=1
      fi
      if [ "$i" = '-r' -o "$i" = '--rpath' ]; then
        rpath=1
      fi
    done

    filename="sample.$action"
    echo "Writing $filename..."
    if [ -e "$filename" -a -z "$force" ]; then
      echo "ERROR: $filename already exists (use --force to overwrite)"
      exit 1
    fi
    cat > "$filename" <<__END__
#include <iomanip>
#include <iostream>
#include "triangulation/dim3.h"
#include "triangulation/example3.h"

int main() {
    regina::Triangulation<3> tri = regina::Example<3>::weberSeifert();
    std::cout << tri.homology().str() << std::endl;
    return 0;
}
__END__

    echo "Preparing Makefile..."
    if [ -e Makefile -a -z "$force" ]; then
      echo "ERROR: Makefile already exists (use --force to overwrite)"
      exit 1
    fi
    case "$install_type" in
      Windows )
        cat <<__END__
ERROR: The Windows app for Regina does not ship with development files
       (i.e., Regina's C++ headers and related files).
__END__
        exit 1
        ;;
      Bundle )
        cat <<__END__
ERROR: The macOS app bundle for Regina does not ship with development files
       (i.e., Regina's C++ headers and related files).
__END__
        exit 1
        ;;
      XDG | HPC )
        regina_config='@BASH_CMAKE_INSTALL_PREFIX@/bin/regina-engine-config'
        # TODO: do we quote $< and $@?  What about @...@ args?
        if [ "$rpath" = 1 ]; then
          rpath_flags="-Wl,-rpath "'@BASH_CMAKE_BINARY_DIR@/engine'
        else
          rpath_flags=
        fi
        cat > Makefile <<__END__
% : %.cc
	c++ -O3 \$< \`$regina_config --cflags --libs\` $rpath_flags -o \$@
__END__
        ;;
      Source )
        include_flags='@BASH_RECONFIG_INCLUDE_FLAGS@'
        link_flags='@BASH_RECONFIG_LINK_FLAGS@'
        cat > Makefile <<__END__
% : %.cc
	c++ '@CMAKE_CXX17_STANDARD_COMPILE_OPTION@' -O3 \$< \\
		-I'@BASH_CMAKE_SOURCE_DIR@/engine' -I'@BASH_CMAKE_BINARY_DIR@/engine' \\
		$include_flags \\
		'@BASH_CMAKE_BINARY_DIR@/engine/libregina-engine.so' \\
		$link_flags \\
		-Wl,-rpath '@BASH_CMAKE_BINARY_DIR@/engine' \\
		-o \$@
__END__
        ;;
      * )
        echo "ERROR: Unrecognised Regina installation type ($install_type)."
        exit 1
        ;;
    esac
    echo 'Done.'
    ;;
  # -------------------- installtype ---------------------
  installtype )
    if [ "$has_help" = 1 ]; then
      cat <<__END__
Usage: $0 installtype

Identifies the type of Regina installation.

Possible results:
    XDG     : Running from an installation in a fixed location that follows the
              freedesktop.org layout.  This is seen with Regina's GNU/Linux
              packages, as well as local CMake builds with no special arguments.
    HPC     : Running from a slimmed-down installation (e.g., no GUI or HTML
              docs) in a fixed but possibly non-standard location, suitable
              for builds on HPC systems.  This is typically seen with local
              CMake builds where REGINA_INSTALL_TYPE was explicitly set to HPC.
    Bundle  : Running from within Regina's macOS app bundle.  This is seen with
              Regina's macOS app, as well as local Xcode builds.
    Windows : Running from within Regina's Windows app.  This is seen with
              Regina's Windows app, as well as local builds that follow the
              (intricate and unsupported) msys2/mingw-w64 build process.
    Source  : Running directly from Regina's source tree (i.e., a local build
              that has not been installed).
__END__
      exit 0
    fi
    echo "$install_type"
    ;;
  # -------------------- default ---------------------
  * )
    echo "ERROR: Unknown action ($action)."
    usage
    exit 1
esac

exit 0
