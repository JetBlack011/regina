#!/bin/sh
# Script to start regina.
set -e

# --- Check command-line options. ---

for i; do
	if [ "$i" = "--verbose" -o "$i" = "-v" ]; then
		export REGINA_VERBOSITY=2
	elif [ "$i" = "--quiet" -o "$i" = "-q" ]; then
		export REGINA_VERBOSITY=0
	fi
done

# --- Determine which platform we're running on. ---

if [ -z "$OSTYPE" ]; then
	if [ -e /usr/bin/cygpath.exe ]; then
		export OSTYPE=cygwin
	else
		export OSTYPE=`uname -s`
	fi
fi

# --- Read runtime options. ---

. "`dirname "$0"`/scripts/regscript_opt"

# --- Convert filenames if necessary for cygwin.

if [ "$OSTYPE" = "cygwin" ]; then
	# We'll do this carefully because the windows paths will
	# contain backslashes.

	# Options that are single filenames:
	for i in REGINA_OPTIONS_LOCAL REGINA_BTOOLS REGINA_JYTHON REGINA_JAVAHELP REGINA_JARDIR REGINA_CACHEDIR; do
		if ( eval "[ ! -z \"\$$i\" ]" ); then
			eval 'export '"$i"'="`cygpath -aw "$'"$i"'"`"'
		fi
	done

	# Options that are colon-separated lists of filenames:
	optioncmds="`awk -f "$REGINA_HOME/scripts/regscript_expandlist" <<-end
		REGINA_JNIDIR=$REGINA_JNIDIR
		REGINA_EXTRA_CLASSES=$REGINA_EXTRA_CLASSES
	end
	`"
	eval $optioncmds;
fi

# --- Set the classpath. ---

reginaclasses=""
for i in "$REGINA_JARDIR"/*.jar; do
	reginaclasses="$reginaclasses$cps$i";
done

export CLASSPATH="$reginaclasses$cps$REGINA_BTOOLS$cps$REGINA_JYTHON$cps$REGINA_JAVAHELP$cps$REGINA_EXTRA_CLASSES$cps$CLASSPATH"

# --- Set the Java defines. ---

addjavadef () {
	eval "javadefs=\"\$javadefs \\\"-D$1=\$$1\\\"\""
}
use_java_defs="REGINA_ENGINE REGINA_INTERFACE REGINA_JNIENGINE REGINA_CORBAHOST REGINA_CORBAPORT"

javadefs="\"-Djava.library.path=$REGINA_JNIDIR\""
if [ ! -z "$REGINA_CACHEDIR" ]; then
	javadefs="$javadefs \"-Dpython.cachedir=$REGINA_CACHEDIR\""
fi
addjavadef "REGINA_OPTIONS_LOCAL"

for i in $use_java_defs; do
	if ( eval "[ ! -z \"\$$i\" ]" ); then
		addjavadef $i
	fi
done

# --- Run the application. ---

command="$REGINA_JAVA $javadefs normal.Application"

info "Command: $command"
info "Classpath: $CLASSPATH"

if ! ( eval $command '"$@"' ); then
	error
	error "################################"
	error "#                              #"
	error "#            REGINA            #"
	error "#                              #"
	error "#  Could not run application!  #"
	error "#                              #"
	error "################################"
	error
	error "An error occurred whilst trying to run the application.  Use:"
	error
	error "    $0 --verbose"
	error
	error "to see more diagnostic output such as the runtime options"
	error "that are being used.  You may wish to verify that these"
	error "options are correct and edit the runtime options file(s)"
	error "if appropriate."
	error
	error "If you still can't run the application, mail $support"
	error "for assistance."
	error
	exit 1
fi
