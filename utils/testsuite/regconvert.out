============================================================
TEST: regconvert
--------------------
No files have been specified.

Usage:
    regconvert [ -3 | -7 ] [ -x | -u ] <old-file> [ <new-file> ]

    -7 : Convert to the new Regina 7.0 file format (default)
    -3 : Convert to the old Regina 3.0 file format

    -x : Convert to compressed XML (default)
    -u : Convert to uncompressed XML

    <new-file> may be the same as <old-file>.
    <new-file> defaults to standard output (implies -u).
--------------------
Exit code: 1
============================================================
TEST: regconvert -x -u
--------------------
More than one file type has been specified.

Usage:
    regconvert [ -3 | -7 ] [ -x | -u ] <old-file> [ <new-file> ]

    -7 : Convert to the new Regina 7.0 file format (default)
    -3 : Convert to the old Regina 3.0 file format

    -x : Convert to compressed XML (default)
    -u : Convert to uncompressed XML

    <new-file> may be the same as <old-file>.
    <new-file> defaults to standard output (implies -u).
--------------------
Exit code: 1
============================================================
TEST: regconvert -f
--------------------
Invalid option: -f

Usage:
    regconvert [ -3 | -7 ] [ -x | -u ] <old-file> [ <new-file> ]

    -7 : Convert to the new Regina 7.0 file format (default)
    -3 : Convert to the old Regina 3.0 file format

    -x : Convert to compressed XML (default)
    -u : Convert to uncompressed XML

    <new-file> may be the same as <old-file>.
    <new-file> defaults to standard output (implies -u).
--------------------
Exit code: 1
============================================================
TEST: regconvert ''
--------------------
Empty arguments are not allowed.

Usage:
    regconvert [ -3 | -7 ] [ -x | -u ] <old-file> [ <new-file> ]

    -7 : Convert to the new Regina 7.0 file format (default)
    -3 : Convert to the old Regina 3.0 file format

    -x : Convert to compressed XML (default)
    -u : Convert to uncompressed XML

    <new-file> may be the same as <old-file>.
    <new-file> defaults to standard output (implies -u).
--------------------
Exit code: 1
============================================================
TEST: regconvert -x
--------------------
No files have been specified.

Usage:
    regconvert [ -3 | -7 ] [ -x | -u ] <old-file> [ <new-file> ]

    -7 : Convert to the new Regina 7.0 file format (default)
    -3 : Convert to the old Regina 3.0 file format

    -x : Convert to compressed XML (default)
    -u : Convert to uncompressed XML

    <new-file> may be the same as <old-file>.
    <new-file> defaults to standard output (implies -u).
--------------------
Exit code: 1
============================================================
TEST: regconvert -x @TESTDIR@/b5.rga
--------------------
Only uncompressed XML can be written to standard output.

Usage:
    regconvert [ -3 | -7 ] [ -x | -u ] <old-file> [ <new-file> ]

    -7 : Convert to the new Regina 7.0 file format (default)
    -3 : Convert to the old Regina 3.0 file format

    -x : Convert to compressed XML (default)
    -u : Convert to uncompressed XML

    <new-file> may be the same as <old-file>.
    <new-file> defaults to standard output (implies -u).
--------------------
Exit code: 1
============================================================
TEST: regconvert @TESTDIR@/b5.rga @TESTOUT@ foo
--------------------
More than two files have been specified.

Usage:
    regconvert [ -3 | -7 ] [ -x | -u ] <old-file> [ <new-file> ]

    -7 : Convert to the new Regina 7.0 file format (default)
    -3 : Convert to the old Regina 3.0 file format

    -x : Convert to compressed XML (default)
    -u : Convert to uncompressed XML

    <new-file> may be the same as <old-file>.
    <new-file> defaults to standard output (implies -u).
--------------------
Exit code: 1
============================================================
TEST: regconvert @INVALIDFILE@
--------------------
File @INVALIDFILE@ could not be read.
--------------------
Exit code: 1
============================================================
TEST: regconvert @BADFILE@
--------------------
XML Error: Document is empty

File @BADFILE@ could not be read.
--------------------
Exit code: 1
============================================================
TEST: regconvert @TESTDIR@/b5.rga @INVALIDFILE@
--------------------
File @INVALIDFILE@ could not be written.
--------------------
Exit code: 1
============================================================
TEST: regconvert -3 @TESTDIR@/b5.rga
--------------------
<?xml version="1.0"?>
<reginadata engine="_">
<packet type="Container" typeid="1"
	label="Container">
<packet type="3-Manifold Triangulation" typeid="3"
	label="B5">
  <tetrahedra ntet="8">
    <tet desc=""> 1 228 2 228 -1 -1 3 228 </tet>
    <tet desc=""> 0 228 4 228 -1 -1 2 147 </tet>
    <tet desc=""> 5 228 0 228 1 57 6 228 </tet>
    <tet desc=""> 6 210 7 228 5 177 0 228 </tet>
    <tet desc=""> 5 225 1 228 6 198 7 147 </tet>
    <tet desc=""> 2 228 4 225 7 198 3 177 </tet>
    <tet desc=""> 4 198 7 108 3 201 2 228 </tet>
    <tet desc=""> 5 198 3 228 4 57 6 108 </tet>
  </tetrahedra>
  <H1><abeliangroup rank="1"> </abeliangroup></H1>
  <H1Rel><abeliangroup rank="0"> </abeliangroup></H1Rel>
  <H1Bdry><abeliangroup rank="2"> </abeliangroup></H1Bdry>
  <H2><abeliangroup rank="0"> </abeliangroup></H2>
</packet> <!-- B5 (3_Manifold Triangulation) -->
</packet> <!-- Container (Container) -->
</reginadata>
--------------------
Exit code: 0
============================================================
TEST: regconvert -3 @TESTDIR@/tiny.rga
--------------------
<?xml version="1.0"?>
<reginadata engine="_">
<packet type="Container" typeid="1"
	label="Sample Data File">
<packet type="Text" typeid="2"
	label="Read Me">
  <text>Welcome to Regina!</text>
</packet> <!-- Read Me (Text) -->
<packet type="Container" typeid="1"
	label="3-Manifolds" id="_">
<packet type="3-Manifold Triangulation" typeid="3"
	label="Layered Solid Torus">
  <tetrahedra ntet="4">
    <tet desc=""> 1 54 1 156 -1 -1 -1 -1 </tet>
    <tet desc=""> 2 54 2 156 0 135 0 120 </tet>
    <tet desc=""> 3 39 3 216 1 135 1 120 </tet>
    <tet desc=""> 3 57 3 147 2 216 2 39 </tet>
  </tetrahedra>
  <H1><abeliangroup rank="1"> </abeliangroup></H1>
</packet> <!-- Layered Solid Torus (3_Manifold Triangulation) -->
<packet type="3-Manifold Triangulation" typeid="3"
	label="RP² x S¹">
  <tetrahedra ntet="3">
    <tet desc=""> 1 228 1 228 2 141 2 120 </tet>
    <tet desc=""> 0 228 0 228 2 39 2 210 </tet>
    <tet desc=""> 0 114 0 156 1 39 1 201 </tet>
  </tetrahedra>
  <H1><abeliangroup rank="1"> 2 </abeliangroup></H1>
  <H1Rel><abeliangroup rank="1"> 2 </abeliangroup></H1Rel>
  <H1Bdry><abeliangroup rank="0"> </abeliangroup></H1Bdry>
  <H2><abeliangroup rank="0"> 2 </abeliangroup></H2>
<packet type="Text" typeid="2"
	label="Note">
  <text>There are in fact two triangulations of this 3-manifold with three tetrahedra.</text>
</packet> <!-- Note (Text) -->
</packet> <!-- RP² x S¹ (3_Manifold Triangulation) -->
<packet type="SnapPea Triangulation" typeid="16"
	label="Figure 8 Knot Complement">
  <snappea>% Triangulation
m004
geometric_solution  2.02988321
oriented_manifold
CS_unknown

1 0
    torus   0.000000000000   0.000000000000

2
   1    1    1    1 
 0132 1230 2310 2103
   0    0    0    0 
  0  0  0  0  0  0  0  0 -1  1  0  0  0  0  0  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0 -1  0  1  1  0 -1  0  0  1  0 -1 -1  0  1  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0.500000000000   0.866025403784

   0    0    0    0 
 0132 3201 3012 2103
   0    0    0    0 
  0  0  0  0  0  0  0  0  0  0  0  0  1  0 -1  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0 -1  0  1 -1  0  1  0  1  0  0 -1  0  1 -1  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0.500000000000   0.866025403784

</snappea>
<packet type="Angle Structure List" typeid="9"
	label="Angle Structures">
  <angleparams tautonly="F" algorithm="16384"/>
  <struct len="7"> 1 1 3 1 6 1 </struct>
  <struct len="7"> 2 1 5 1 6 1 </struct>
  <struct len="7"> 0 1 4 1 6 1 </struct>
  <struct len="7"> 0 1 2 1 3 2 6 2 </struct>
  <struct len="7"> 1 2 4 1 5 1 6 2 </struct>
  <spanstrict value="T"/>
  <spantaut value="T"/>
</packet> <!-- Angle Structures (Angle Structure List) -->
</packet> <!-- Figure 8 Knot Complement (SnapPea Triangulation) -->
</packet> <!-- 3_Manifolds (Container) -->
<packet type="Container" typeid="1"
	label="4-Manifolds">
<packet type="4-Manifold Triangulation" typeid="11"
	label="Twisted S³ x~ S¹">
  <pentachora npent="2">
    <pent desc=""> 0 13380 1 18056 1 18056 1 18056 0 2257 </pent>
    <pent desc=""> 1 13380 0 18056 0 18056 0 18056 1 2257 </pent>
  </pentachora>
<packet type="Normal Hypersurface List" typeid="13"
	label="Normal Hypersurfaces">
  <params type="5" algorithm="32" flavourid="0"
	flavour="Standard normal (tet-prism)"/>
  <hypersurface enc="287" len="30" name=""> 10 1 25 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 2 1 7 1 11 1 17 1 22 1 26 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 1 1 2 1 3 1 8 1 16 1 17 1 18 1 23 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 0 1 4 1 5 1 14 1 15 1 19 1 20 1 29 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 0 1 1 1 2 1 3 1 4 1 15 1 16 1 17 1 18 1 19 1 </hypersurface>
</packet> <!-- Normal Hypersurfaces (Normal Hypersurface List) -->
</packet> <!-- Twisted S³ x~ S¹ (4_Manifold Triangulation) -->
</packet> <!-- 4_Manifolds (Container) -->
<packet type="Container" typeid="1"
	label="2-Manifolds">
<packet type="2-Manifold Triangulation" typeid="15"
	label="Klein Bottle, version 1">
  <triangles ntriangles="2">
    <triangle desc=""> 1 1 1 5 1 0 </triangle>
    <triangle desc=""> 0 1 0 5 0 0 </triangle>
  </triangles>
</packet> <!-- Klein Bottle, version 1 (2_Manifold Triangulation) -->
<packet type="2-Manifold Triangulation" typeid="15"
	label="Klein Bottle, version 2">
  <triangles ntriangles="2">
    <triangle desc=""> 0 4 1 0 0 2 </triangle>
    <triangle desc=""> 1 4 0 0 1 2 </triangle>
  </triangles>
</packet> <!-- Klein Bottle, version 2 (2_Manifold Triangulation) -->
</packet> <!-- 2_Manifolds (Container) -->
<packet type="Container" typeid="1"
	label="Normal Surface Filters">
<packet type="Surface Filter" typeid="8"
	label="Tori and Annuli">
  <filter type="Filter by basic properties" typeid="1">
    <euler> 0 </euler>
    <orbl value="T-"/>
    <compact value="T-"/>
  </filter>
</packet> <!-- Tori and Annuli (Surface Filter) -->
</packet> <!-- Normal Surface Filters (Container) -->
<packet type="Script" typeid="7"
	label="Python Script">
  <var name="tri" valueid="_" value="3-Manifolds"/>
  <text># This Python script runs through all 3-manifold triangulations in this file
# and prints the first homology of each.
#
# See the Regina handbook for more elaborate sample Python sessions.

# Output the homology of each triangulation.
t = tri.firstChild()
while t != None:
	print t.label() + &quot;:&quot;, t.homology()
	t = t.nextSibling()
</text>
</packet> <!-- Python Script (Script) -->
</packet> <!-- Sample Data File (Container) -->
</reginadata>
--------------------
Exit code: 0
============================================================
TEST: regconvert -3 @TESTDIR@/b5.rga @TESTOUT@
--------------------
--------------------
Exit code: 0
--------------------
Output (compressed):
<?xml version="1.0"?>
<reginadata engine="_">
<packet type="Container" typeid="1"
	label="Container">
<packet type="3-Manifold Triangulation" typeid="3"
	label="B5">
  <tetrahedra ntet="8">
    <tet desc=""> 1 228 2 228 -1 -1 3 228 </tet>
    <tet desc=""> 0 228 4 228 -1 -1 2 147 </tet>
    <tet desc=""> 5 228 0 228 1 57 6 228 </tet>
    <tet desc=""> 6 210 7 228 5 177 0 228 </tet>
    <tet desc=""> 5 225 1 228 6 198 7 147 </tet>
    <tet desc=""> 2 228 4 225 7 198 3 177 </tet>
    <tet desc=""> 4 198 7 108 3 201 2 228 </tet>
    <tet desc=""> 5 198 3 228 4 57 6 108 </tet>
  </tetrahedra>
  <H1><abeliangroup rank="1"> </abeliangroup></H1>
  <H1Rel><abeliangroup rank="0"> </abeliangroup></H1Rel>
  <H1Bdry><abeliangroup rank="2"> </abeliangroup></H1Bdry>
  <H2><abeliangroup rank="0"> </abeliangroup></H2>
</packet> <!-- B5 (3_Manifold Triangulation) -->
</packet> <!-- Container (Container) -->
</reginadata>
============================================================
TEST: regconvert -3 @TESTDIR@/tiny.rga @TESTOUT@
--------------------
--------------------
Exit code: 0
--------------------
Output (compressed):
<?xml version="1.0"?>
<reginadata engine="_">
<packet type="Container" typeid="1"
	label="Sample Data File">
<packet type="Text" typeid="2"
	label="Read Me">
  <text>Welcome to Regina!</text>
</packet> <!-- Read Me (Text) -->
<packet type="Container" typeid="1"
	label="3-Manifolds" id="_">
<packet type="3-Manifold Triangulation" typeid="3"
	label="Layered Solid Torus">
  <tetrahedra ntet="4">
    <tet desc=""> 1 54 1 156 -1 -1 -1 -1 </tet>
    <tet desc=""> 2 54 2 156 0 135 0 120 </tet>
    <tet desc=""> 3 39 3 216 1 135 1 120 </tet>
    <tet desc=""> 3 57 3 147 2 216 2 39 </tet>
  </tetrahedra>
  <H1><abeliangroup rank="1"> </abeliangroup></H1>
</packet> <!-- Layered Solid Torus (3_Manifold Triangulation) -->
<packet type="3-Manifold Triangulation" typeid="3"
	label="RP² x S¹">
  <tetrahedra ntet="3">
    <tet desc=""> 1 228 1 228 2 141 2 120 </tet>
    <tet desc=""> 0 228 0 228 2 39 2 210 </tet>
    <tet desc=""> 0 114 0 156 1 39 1 201 </tet>
  </tetrahedra>
  <H1><abeliangroup rank="1"> 2 </abeliangroup></H1>
  <H1Rel><abeliangroup rank="1"> 2 </abeliangroup></H1Rel>
  <H1Bdry><abeliangroup rank="0"> </abeliangroup></H1Bdry>
  <H2><abeliangroup rank="0"> 2 </abeliangroup></H2>
<packet type="Text" typeid="2"
	label="Note">
  <text>There are in fact two triangulations of this 3-manifold with three tetrahedra.</text>
</packet> <!-- Note (Text) -->
</packet> <!-- RP² x S¹ (3_Manifold Triangulation) -->
<packet type="SnapPea Triangulation" typeid="16"
	label="Figure 8 Knot Complement">
  <snappea>% Triangulation
m004
geometric_solution  2.02988321
oriented_manifold
CS_unknown

1 0
    torus   0.000000000000   0.000000000000

2
   1    1    1    1 
 0132 1230 2310 2103
   0    0    0    0 
  0  0  0  0  0  0  0  0 -1  1  0  0  0  0  0  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0 -1  0  1  1  0 -1  0  0  1  0 -1 -1  0  1  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0.500000000000   0.866025403784

   0    0    0    0 
 0132 3201 3012 2103
   0    0    0    0 
  0  0  0  0  0  0  0  0  0  0  0  0  1  0 -1  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0 -1  0  1 -1  0  1  0  1  0  0 -1  0  1 -1  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0.500000000000   0.866025403784

</snappea>
<packet type="Angle Structure List" typeid="9"
	label="Angle Structures">
  <angleparams tautonly="F" algorithm="16384"/>
  <struct len="7"> 1 1 3 1 6 1 </struct>
  <struct len="7"> 2 1 5 1 6 1 </struct>
  <struct len="7"> 0 1 4 1 6 1 </struct>
  <struct len="7"> 0 1 2 1 3 2 6 2 </struct>
  <struct len="7"> 1 2 4 1 5 1 6 2 </struct>
  <spanstrict value="T"/>
  <spantaut value="T"/>
</packet> <!-- Angle Structures (Angle Structure List) -->
</packet> <!-- Figure 8 Knot Complement (SnapPea Triangulation) -->
</packet> <!-- 3_Manifolds (Container) -->
<packet type="Container" typeid="1"
	label="4-Manifolds">
<packet type="4-Manifold Triangulation" typeid="11"
	label="Twisted S³ x~ S¹">
  <pentachora npent="2">
    <pent desc=""> 0 13380 1 18056 1 18056 1 18056 0 2257 </pent>
    <pent desc=""> 1 13380 0 18056 0 18056 0 18056 1 2257 </pent>
  </pentachora>
<packet type="Normal Hypersurface List" typeid="13"
	label="Normal Hypersurfaces">
  <params type="5" algorithm="32" flavourid="0"
	flavour="Standard normal (tet-prism)"/>
  <hypersurface enc="287" len="30" name=""> 10 1 25 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 2 1 7 1 11 1 17 1 22 1 26 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 1 1 2 1 3 1 8 1 16 1 17 1 18 1 23 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 0 1 4 1 5 1 14 1 15 1 19 1 20 1 29 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 0 1 1 1 2 1 3 1 4 1 15 1 16 1 17 1 18 1 19 1 </hypersurface>
</packet> <!-- Normal Hypersurfaces (Normal Hypersurface List) -->
</packet> <!-- Twisted S³ x~ S¹ (4_Manifold Triangulation) -->
</packet> <!-- 4_Manifolds (Container) -->
<packet type="Container" typeid="1"
	label="2-Manifolds">
<packet type="2-Manifold Triangulation" typeid="15"
	label="Klein Bottle, version 1">
  <triangles ntriangles="2">
    <triangle desc=""> 1 1 1 5 1 0 </triangle>
    <triangle desc=""> 0 1 0 5 0 0 </triangle>
  </triangles>
</packet> <!-- Klein Bottle, version 1 (2_Manifold Triangulation) -->
<packet type="2-Manifold Triangulation" typeid="15"
	label="Klein Bottle, version 2">
  <triangles ntriangles="2">
    <triangle desc=""> 0 4 1 0 0 2 </triangle>
    <triangle desc=""> 1 4 0 0 1 2 </triangle>
  </triangles>
</packet> <!-- Klein Bottle, version 2 (2_Manifold Triangulation) -->
</packet> <!-- 2_Manifolds (Container) -->
<packet type="Container" typeid="1"
	label="Normal Surface Filters">
<packet type="Surface Filter" typeid="8"
	label="Tori and Annuli">
  <filter type="Filter by basic properties" typeid="1">
    <euler> 0 </euler>
    <orbl value="T-"/>
    <compact value="T-"/>
  </filter>
</packet> <!-- Tori and Annuli (Surface Filter) -->
</packet> <!-- Normal Surface Filters (Container) -->
<packet type="Script" typeid="7"
	label="Python Script">
  <var name="tri" valueid="_" value="3-Manifolds"/>
  <text># This Python script runs through all 3-manifold triangulations in this file
# and prints the first homology of each.
#
# See the Regina handbook for more elaborate sample Python sessions.

# Output the homology of each triangulation.
t = tri.firstChild()
while t != None:
	print t.label() + &quot;:&quot;, t.homology()
	t = t.nextSibling()
</text>
</packet> <!-- Python Script (Script) -->
</packet> <!-- Sample Data File (Container) -->
</reginadata>
============================================================
TEST: regconvert -3 -x @TESTDIR@/b5.rga @TESTOUT@
--------------------
--------------------
Exit code: 0
--------------------
Output (compressed):
<?xml version="1.0"?>
<reginadata engine="_">
<packet type="Container" typeid="1"
	label="Container">
<packet type="3-Manifold Triangulation" typeid="3"
	label="B5">
  <tetrahedra ntet="8">
    <tet desc=""> 1 228 2 228 -1 -1 3 228 </tet>
    <tet desc=""> 0 228 4 228 -1 -1 2 147 </tet>
    <tet desc=""> 5 228 0 228 1 57 6 228 </tet>
    <tet desc=""> 6 210 7 228 5 177 0 228 </tet>
    <tet desc=""> 5 225 1 228 6 198 7 147 </tet>
    <tet desc=""> 2 228 4 225 7 198 3 177 </tet>
    <tet desc=""> 4 198 7 108 3 201 2 228 </tet>
    <tet desc=""> 5 198 3 228 4 57 6 108 </tet>
  </tetrahedra>
  <H1><abeliangroup rank="1"> </abeliangroup></H1>
  <H1Rel><abeliangroup rank="0"> </abeliangroup></H1Rel>
  <H1Bdry><abeliangroup rank="2"> </abeliangroup></H1Bdry>
  <H2><abeliangroup rank="0"> </abeliangroup></H2>
</packet> <!-- B5 (3_Manifold Triangulation) -->
</packet> <!-- Container (Container) -->
</reginadata>
============================================================
TEST: regconvert -3 -x @TESTDIR@/tiny.rga @TESTOUT@
--------------------
--------------------
Exit code: 0
--------------------
Output (compressed):
<?xml version="1.0"?>
<reginadata engine="_">
<packet type="Container" typeid="1"
	label="Sample Data File">
<packet type="Text" typeid="2"
	label="Read Me">
  <text>Welcome to Regina!</text>
</packet> <!-- Read Me (Text) -->
<packet type="Container" typeid="1"
	label="3-Manifolds" id="_">
<packet type="3-Manifold Triangulation" typeid="3"
	label="Layered Solid Torus">
  <tetrahedra ntet="4">
    <tet desc=""> 1 54 1 156 -1 -1 -1 -1 </tet>
    <tet desc=""> 2 54 2 156 0 135 0 120 </tet>
    <tet desc=""> 3 39 3 216 1 135 1 120 </tet>
    <tet desc=""> 3 57 3 147 2 216 2 39 </tet>
  </tetrahedra>
  <H1><abeliangroup rank="1"> </abeliangroup></H1>
</packet> <!-- Layered Solid Torus (3_Manifold Triangulation) -->
<packet type="3-Manifold Triangulation" typeid="3"
	label="RP² x S¹">
  <tetrahedra ntet="3">
    <tet desc=""> 1 228 1 228 2 141 2 120 </tet>
    <tet desc=""> 0 228 0 228 2 39 2 210 </tet>
    <tet desc=""> 0 114 0 156 1 39 1 201 </tet>
  </tetrahedra>
  <H1><abeliangroup rank="1"> 2 </abeliangroup></H1>
  <H1Rel><abeliangroup rank="1"> 2 </abeliangroup></H1Rel>
  <H1Bdry><abeliangroup rank="0"> </abeliangroup></H1Bdry>
  <H2><abeliangroup rank="0"> 2 </abeliangroup></H2>
<packet type="Text" typeid="2"
	label="Note">
  <text>There are in fact two triangulations of this 3-manifold with three tetrahedra.</text>
</packet> <!-- Note (Text) -->
</packet> <!-- RP² x S¹ (3_Manifold Triangulation) -->
<packet type="SnapPea Triangulation" typeid="16"
	label="Figure 8 Knot Complement">
  <snappea>% Triangulation
m004
geometric_solution  2.02988321
oriented_manifold
CS_unknown

1 0
    torus   0.000000000000   0.000000000000

2
   1    1    1    1 
 0132 1230 2310 2103
   0    0    0    0 
  0  0  0  0  0  0  0  0 -1  1  0  0  0  0  0  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0 -1  0  1  1  0 -1  0  0  1  0 -1 -1  0  1  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0.500000000000   0.866025403784

   0    0    0    0 
 0132 3201 3012 2103
   0    0    0    0 
  0  0  0  0  0  0  0  0  0  0  0  0  1  0 -1  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0 -1  0  1 -1  0  1  0  1  0  0 -1  0  1 -1  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0.500000000000   0.866025403784

</snappea>
<packet type="Angle Structure List" typeid="9"
	label="Angle Structures">
  <angleparams tautonly="F" algorithm="16384"/>
  <struct len="7"> 1 1 3 1 6 1 </struct>
  <struct len="7"> 2 1 5 1 6 1 </struct>
  <struct len="7"> 0 1 4 1 6 1 </struct>
  <struct len="7"> 0 1 2 1 3 2 6 2 </struct>
  <struct len="7"> 1 2 4 1 5 1 6 2 </struct>
  <spanstrict value="T"/>
  <spantaut value="T"/>
</packet> <!-- Angle Structures (Angle Structure List) -->
</packet> <!-- Figure 8 Knot Complement (SnapPea Triangulation) -->
</packet> <!-- 3_Manifolds (Container) -->
<packet type="Container" typeid="1"
	label="4-Manifolds">
<packet type="4-Manifold Triangulation" typeid="11"
	label="Twisted S³ x~ S¹">
  <pentachora npent="2">
    <pent desc=""> 0 13380 1 18056 1 18056 1 18056 0 2257 </pent>
    <pent desc=""> 1 13380 0 18056 0 18056 0 18056 1 2257 </pent>
  </pentachora>
<packet type="Normal Hypersurface List" typeid="13"
	label="Normal Hypersurfaces">
  <params type="5" algorithm="32" flavourid="0"
	flavour="Standard normal (tet-prism)"/>
  <hypersurface enc="287" len="30" name=""> 10 1 25 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 2 1 7 1 11 1 17 1 22 1 26 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 1 1 2 1 3 1 8 1 16 1 17 1 18 1 23 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 0 1 4 1 5 1 14 1 15 1 19 1 20 1 29 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 0 1 1 1 2 1 3 1 4 1 15 1 16 1 17 1 18 1 19 1 </hypersurface>
</packet> <!-- Normal Hypersurfaces (Normal Hypersurface List) -->
</packet> <!-- Twisted S³ x~ S¹ (4_Manifold Triangulation) -->
</packet> <!-- 4_Manifolds (Container) -->
<packet type="Container" typeid="1"
	label="2-Manifolds">
<packet type="2-Manifold Triangulation" typeid="15"
	label="Klein Bottle, version 1">
  <triangles ntriangles="2">
    <triangle desc=""> 1 1 1 5 1 0 </triangle>
    <triangle desc=""> 0 1 0 5 0 0 </triangle>
  </triangles>
</packet> <!-- Klein Bottle, version 1 (2_Manifold Triangulation) -->
<packet type="2-Manifold Triangulation" typeid="15"
	label="Klein Bottle, version 2">
  <triangles ntriangles="2">
    <triangle desc=""> 0 4 1 0 0 2 </triangle>
    <triangle desc=""> 1 4 0 0 1 2 </triangle>
  </triangles>
</packet> <!-- Klein Bottle, version 2 (2_Manifold Triangulation) -->
</packet> <!-- 2_Manifolds (Container) -->
<packet type="Container" typeid="1"
	label="Normal Surface Filters">
<packet type="Surface Filter" typeid="8"
	label="Tori and Annuli">
  <filter type="Filter by basic properties" typeid="1">
    <euler> 0 </euler>
    <orbl value="T-"/>
    <compact value="T-"/>
  </filter>
</packet> <!-- Tori and Annuli (Surface Filter) -->
</packet> <!-- Normal Surface Filters (Container) -->
<packet type="Script" typeid="7"
	label="Python Script">
  <var name="tri" valueid="_" value="3-Manifolds"/>
  <text># This Python script runs through all 3-manifold triangulations in this file
# and prints the first homology of each.
#
# See the Regina handbook for more elaborate sample Python sessions.

# Output the homology of each triangulation.
t = tri.firstChild()
while t != None:
	print t.label() + &quot;:&quot;, t.homology()
	t = t.nextSibling()
</text>
</packet> <!-- Python Script (Script) -->
</packet> <!-- Sample Data File (Container) -->
</reginadata>
============================================================
TEST: regconvert -3 -u @TESTDIR@/b5.rga
--------------------
<?xml version="1.0"?>
<reginadata engine="_">
<packet type="Container" typeid="1"
	label="Container">
<packet type="3-Manifold Triangulation" typeid="3"
	label="B5">
  <tetrahedra ntet="8">
    <tet desc=""> 1 228 2 228 -1 -1 3 228 </tet>
    <tet desc=""> 0 228 4 228 -1 -1 2 147 </tet>
    <tet desc=""> 5 228 0 228 1 57 6 228 </tet>
    <tet desc=""> 6 210 7 228 5 177 0 228 </tet>
    <tet desc=""> 5 225 1 228 6 198 7 147 </tet>
    <tet desc=""> 2 228 4 225 7 198 3 177 </tet>
    <tet desc=""> 4 198 7 108 3 201 2 228 </tet>
    <tet desc=""> 5 198 3 228 4 57 6 108 </tet>
  </tetrahedra>
  <H1><abeliangroup rank="1"> </abeliangroup></H1>
  <H1Rel><abeliangroup rank="0"> </abeliangroup></H1Rel>
  <H1Bdry><abeliangroup rank="2"> </abeliangroup></H1Bdry>
  <H2><abeliangroup rank="0"> </abeliangroup></H2>
</packet> <!-- B5 (3_Manifold Triangulation) -->
</packet> <!-- Container (Container) -->
</reginadata>
--------------------
Exit code: 0
============================================================
TEST: regconvert -3 -u @TESTDIR@/tiny.rga
--------------------
<?xml version="1.0"?>
<reginadata engine="_">
<packet type="Container" typeid="1"
	label="Sample Data File">
<packet type="Text" typeid="2"
	label="Read Me">
  <text>Welcome to Regina!</text>
</packet> <!-- Read Me (Text) -->
<packet type="Container" typeid="1"
	label="3-Manifolds" id="_">
<packet type="3-Manifold Triangulation" typeid="3"
	label="Layered Solid Torus">
  <tetrahedra ntet="4">
    <tet desc=""> 1 54 1 156 -1 -1 -1 -1 </tet>
    <tet desc=""> 2 54 2 156 0 135 0 120 </tet>
    <tet desc=""> 3 39 3 216 1 135 1 120 </tet>
    <tet desc=""> 3 57 3 147 2 216 2 39 </tet>
  </tetrahedra>
  <H1><abeliangroup rank="1"> </abeliangroup></H1>
</packet> <!-- Layered Solid Torus (3_Manifold Triangulation) -->
<packet type="3-Manifold Triangulation" typeid="3"
	label="RP² x S¹">
  <tetrahedra ntet="3">
    <tet desc=""> 1 228 1 228 2 141 2 120 </tet>
    <tet desc=""> 0 228 0 228 2 39 2 210 </tet>
    <tet desc=""> 0 114 0 156 1 39 1 201 </tet>
  </tetrahedra>
  <H1><abeliangroup rank="1"> 2 </abeliangroup></H1>
  <H1Rel><abeliangroup rank="1"> 2 </abeliangroup></H1Rel>
  <H1Bdry><abeliangroup rank="0"> </abeliangroup></H1Bdry>
  <H2><abeliangroup rank="0"> 2 </abeliangroup></H2>
<packet type="Text" typeid="2"
	label="Note">
  <text>There are in fact two triangulations of this 3-manifold with three tetrahedra.</text>
</packet> <!-- Note (Text) -->
</packet> <!-- RP² x S¹ (3_Manifold Triangulation) -->
<packet type="SnapPea Triangulation" typeid="16"
	label="Figure 8 Knot Complement">
  <snappea>% Triangulation
m004
geometric_solution  2.02988321
oriented_manifold
CS_unknown

1 0
    torus   0.000000000000   0.000000000000

2
   1    1    1    1 
 0132 1230 2310 2103
   0    0    0    0 
  0  0  0  0  0  0  0  0 -1  1  0  0  0  0  0  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0 -1  0  1  1  0 -1  0  0  1  0 -1 -1  0  1  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0.500000000000   0.866025403784

   0    0    0    0 
 0132 3201 3012 2103
   0    0    0    0 
  0  0  0  0  0  0  0  0  0  0  0  0  1  0 -1  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0 -1  0  1 -1  0  1  0  1  0  0 -1  0  1 -1  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0.500000000000   0.866025403784

</snappea>
<packet type="Angle Structure List" typeid="9"
	label="Angle Structures">
  <angleparams tautonly="F" algorithm="16384"/>
  <struct len="7"> 1 1 3 1 6 1 </struct>
  <struct len="7"> 2 1 5 1 6 1 </struct>
  <struct len="7"> 0 1 4 1 6 1 </struct>
  <struct len="7"> 0 1 2 1 3 2 6 2 </struct>
  <struct len="7"> 1 2 4 1 5 1 6 2 </struct>
  <spanstrict value="T"/>
  <spantaut value="T"/>
</packet> <!-- Angle Structures (Angle Structure List) -->
</packet> <!-- Figure 8 Knot Complement (SnapPea Triangulation) -->
</packet> <!-- 3_Manifolds (Container) -->
<packet type="Container" typeid="1"
	label="4-Manifolds">
<packet type="4-Manifold Triangulation" typeid="11"
	label="Twisted S³ x~ S¹">
  <pentachora npent="2">
    <pent desc=""> 0 13380 1 18056 1 18056 1 18056 0 2257 </pent>
    <pent desc=""> 1 13380 0 18056 0 18056 0 18056 1 2257 </pent>
  </pentachora>
<packet type="Normal Hypersurface List" typeid="13"
	label="Normal Hypersurfaces">
  <params type="5" algorithm="32" flavourid="0"
	flavour="Standard normal (tet-prism)"/>
  <hypersurface enc="287" len="30" name=""> 10 1 25 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 2 1 7 1 11 1 17 1 22 1 26 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 1 1 2 1 3 1 8 1 16 1 17 1 18 1 23 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 0 1 4 1 5 1 14 1 15 1 19 1 20 1 29 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 0 1 1 1 2 1 3 1 4 1 15 1 16 1 17 1 18 1 19 1 </hypersurface>
</packet> <!-- Normal Hypersurfaces (Normal Hypersurface List) -->
</packet> <!-- Twisted S³ x~ S¹ (4_Manifold Triangulation) -->
</packet> <!-- 4_Manifolds (Container) -->
<packet type="Container" typeid="1"
	label="2-Manifolds">
<packet type="2-Manifold Triangulation" typeid="15"
	label="Klein Bottle, version 1">
  <triangles ntriangles="2">
    <triangle desc=""> 1 1 1 5 1 0 </triangle>
    <triangle desc=""> 0 1 0 5 0 0 </triangle>
  </triangles>
</packet> <!-- Klein Bottle, version 1 (2_Manifold Triangulation) -->
<packet type="2-Manifold Triangulation" typeid="15"
	label="Klein Bottle, version 2">
  <triangles ntriangles="2">
    <triangle desc=""> 0 4 1 0 0 2 </triangle>
    <triangle desc=""> 1 4 0 0 1 2 </triangle>
  </triangles>
</packet> <!-- Klein Bottle, version 2 (2_Manifold Triangulation) -->
</packet> <!-- 2_Manifolds (Container) -->
<packet type="Container" typeid="1"
	label="Normal Surface Filters">
<packet type="Surface Filter" typeid="8"
	label="Tori and Annuli">
  <filter type="Filter by basic properties" typeid="1">
    <euler> 0 </euler>
    <orbl value="T-"/>
    <compact value="T-"/>
  </filter>
</packet> <!-- Tori and Annuli (Surface Filter) -->
</packet> <!-- Normal Surface Filters (Container) -->
<packet type="Script" typeid="7"
	label="Python Script">
  <var name="tri" valueid="_" value="3-Manifolds"/>
  <text># This Python script runs through all 3-manifold triangulations in this file
# and prints the first homology of each.
#
# See the Regina handbook for more elaborate sample Python sessions.

# Output the homology of each triangulation.
t = tri.firstChild()
while t != None:
	print t.label() + &quot;:&quot;, t.homology()
	t = t.nextSibling()
</text>
</packet> <!-- Python Script (Script) -->
</packet> <!-- Sample Data File (Container) -->
</reginadata>
--------------------
Exit code: 0
============================================================
TEST: regconvert -3 -u @TESTDIR@/b5.rga @TESTOUT@
--------------------
--------------------
Exit code: 0
--------------------
Output:
<?xml version="1.0"?>
<reginadata engine="_">
<packet type="Container" typeid="1"
	label="Container">
<packet type="3-Manifold Triangulation" typeid="3"
	label="B5">
  <tetrahedra ntet="8">
    <tet desc=""> 1 228 2 228 -1 -1 3 228 </tet>
    <tet desc=""> 0 228 4 228 -1 -1 2 147 </tet>
    <tet desc=""> 5 228 0 228 1 57 6 228 </tet>
    <tet desc=""> 6 210 7 228 5 177 0 228 </tet>
    <tet desc=""> 5 225 1 228 6 198 7 147 </tet>
    <tet desc=""> 2 228 4 225 7 198 3 177 </tet>
    <tet desc=""> 4 198 7 108 3 201 2 228 </tet>
    <tet desc=""> 5 198 3 228 4 57 6 108 </tet>
  </tetrahedra>
  <H1><abeliangroup rank="1"> </abeliangroup></H1>
  <H1Rel><abeliangroup rank="0"> </abeliangroup></H1Rel>
  <H1Bdry><abeliangroup rank="2"> </abeliangroup></H1Bdry>
  <H2><abeliangroup rank="0"> </abeliangroup></H2>
</packet> <!-- B5 (3_Manifold Triangulation) -->
</packet> <!-- Container (Container) -->
</reginadata>
============================================================
TEST: regconvert -3 -u @TESTDIR@/tiny.rga @TESTOUT@
--------------------
--------------------
Exit code: 0
--------------------
Output:
<?xml version="1.0"?>
<reginadata engine="_">
<packet type="Container" typeid="1"
	label="Sample Data File">
<packet type="Text" typeid="2"
	label="Read Me">
  <text>Welcome to Regina!</text>
</packet> <!-- Read Me (Text) -->
<packet type="Container" typeid="1"
	label="3-Manifolds" id="_">
<packet type="3-Manifold Triangulation" typeid="3"
	label="Layered Solid Torus">
  <tetrahedra ntet="4">
    <tet desc=""> 1 54 1 156 -1 -1 -1 -1 </tet>
    <tet desc=""> 2 54 2 156 0 135 0 120 </tet>
    <tet desc=""> 3 39 3 216 1 135 1 120 </tet>
    <tet desc=""> 3 57 3 147 2 216 2 39 </tet>
  </tetrahedra>
  <H1><abeliangroup rank="1"> </abeliangroup></H1>
</packet> <!-- Layered Solid Torus (3_Manifold Triangulation) -->
<packet type="3-Manifold Triangulation" typeid="3"
	label="RP² x S¹">
  <tetrahedra ntet="3">
    <tet desc=""> 1 228 1 228 2 141 2 120 </tet>
    <tet desc=""> 0 228 0 228 2 39 2 210 </tet>
    <tet desc=""> 0 114 0 156 1 39 1 201 </tet>
  </tetrahedra>
  <H1><abeliangroup rank="1"> 2 </abeliangroup></H1>
  <H1Rel><abeliangroup rank="1"> 2 </abeliangroup></H1Rel>
  <H1Bdry><abeliangroup rank="0"> </abeliangroup></H1Bdry>
  <H2><abeliangroup rank="0"> 2 </abeliangroup></H2>
<packet type="Text" typeid="2"
	label="Note">
  <text>There are in fact two triangulations of this 3-manifold with three tetrahedra.</text>
</packet> <!-- Note (Text) -->
</packet> <!-- RP² x S¹ (3_Manifold Triangulation) -->
<packet type="SnapPea Triangulation" typeid="16"
	label="Figure 8 Knot Complement">
  <snappea>% Triangulation
m004
geometric_solution  2.02988321
oriented_manifold
CS_unknown

1 0
    torus   0.000000000000   0.000000000000

2
   1    1    1    1 
 0132 1230 2310 2103
   0    0    0    0 
  0  0  0  0  0  0  0  0 -1  1  0  0  0  0  0  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0 -1  0  1  1  0 -1  0  0  1  0 -1 -1  0  1  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0.500000000000   0.866025403784

   0    0    0    0 
 0132 3201 3012 2103
   0    0    0    0 
  0  0  0  0  0  0  0  0  0  0  0  0  1  0 -1  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0 -1  0  1 -1  0  1  0  1  0  0 -1  0  1 -1  0
  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0
  0.500000000000   0.866025403784

</snappea>
<packet type="Angle Structure List" typeid="9"
	label="Angle Structures">
  <angleparams tautonly="F" algorithm="16384"/>
  <struct len="7"> 1 1 3 1 6 1 </struct>
  <struct len="7"> 2 1 5 1 6 1 </struct>
  <struct len="7"> 0 1 4 1 6 1 </struct>
  <struct len="7"> 0 1 2 1 3 2 6 2 </struct>
  <struct len="7"> 1 2 4 1 5 1 6 2 </struct>
  <spanstrict value="T"/>
  <spantaut value="T"/>
</packet> <!-- Angle Structures (Angle Structure List) -->
</packet> <!-- Figure 8 Knot Complement (SnapPea Triangulation) -->
</packet> <!-- 3_Manifolds (Container) -->
<packet type="Container" typeid="1"
	label="4-Manifolds">
<packet type="4-Manifold Triangulation" typeid="11"
	label="Twisted S³ x~ S¹">
  <pentachora npent="2">
    <pent desc=""> 0 13380 1 18056 1 18056 1 18056 0 2257 </pent>
    <pent desc=""> 1 13380 0 18056 0 18056 0 18056 1 2257 </pent>
  </pentachora>
<packet type="Normal Hypersurface List" typeid="13"
	label="Normal Hypersurfaces">
  <params type="5" algorithm="32" flavourid="0"
	flavour="Standard normal (tet-prism)"/>
  <hypersurface enc="287" len="30" name=""> 10 1 25 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 2 1 7 1 11 1 17 1 22 1 26 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 1 1 2 1 3 1 8 1 16 1 17 1 18 1 23 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 0 1 4 1 5 1 14 1 15 1 19 1 20 1 29 1 </hypersurface>
  <hypersurface enc="287" len="30" name=""> 0 1 1 1 2 1 3 1 4 1 15 1 16 1 17 1 18 1 19 1 </hypersurface>
</packet> <!-- Normal Hypersurfaces (Normal Hypersurface List) -->
</packet> <!-- Twisted S³ x~ S¹ (4_Manifold Triangulation) -->
</packet> <!-- 4_Manifolds (Container) -->
<packet type="Container" typeid="1"
	label="2-Manifolds">
<packet type="2-Manifold Triangulation" typeid="15"
	label="Klein Bottle, version 1">
  <triangles ntriangles="2">
    <triangle desc=""> 1 1 1 5 1 0 </triangle>
    <triangle desc=""> 0 1 0 5 0 0 </triangle>
  </triangles>
</packet> <!-- Klein Bottle, version 1 (2_Manifold Triangulation) -->
<packet type="2-Manifold Triangulation" typeid="15"
	label="Klein Bottle, version 2">
  <triangles ntriangles="2">
    <triangle desc=""> 0 4 1 0 0 2 </triangle>
    <triangle desc=""> 1 4 0 0 1 2 </triangle>
  </triangles>
</packet> <!-- Klein Bottle, version 2 (2_Manifold Triangulation) -->
</packet> <!-- 2_Manifolds (Container) -->
<packet type="Container" typeid="1"
	label="Normal Surface Filters">
<packet type="Surface Filter" typeid="8"
	label="Tori and Annuli">
  <filter type="Filter by basic properties" typeid="1">
    <euler> 0 </euler>
    <orbl value="T-"/>
    <compact value="T-"/>
  </filter>
</packet> <!-- Tori and Annuli (Surface Filter) -->
</packet> <!-- Normal Surface Filters (Container) -->
<packet type="Script" typeid="7"
	label="Python Script">
  <var name="tri" valueid="_" value="3-Manifolds"/>
  <text># This Python script runs through all 3-manifold triangulations in this file
# and prints the first homology of each.
#
# See the Regina handbook for more elaborate sample Python sessions.

# Output the homology of each triangulation.
t = tri.firstChild()
while t != None:
	print t.label() + &quot;:&quot;, t.homology()
	t = t.nextSibling()
</text>
</packet> <!-- Python Script (Script) -->
</packet> <!-- Sample Data File (Container) -->
</reginadata>
============================================================
