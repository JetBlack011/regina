#!/usr/bin/perl -w
use strict;

my @actionSizes = ( 16, 22, 32 );
my @packetSizes = ( 16, 22, 32 );

my @actionIcons = qw/
    barycentric
    canonical
    components
    connectedsum
    connectedsumwith
    dehydrated
    doublecover
    drilledge
    fill
    locked
    orb
    orient
    packet_view
    puncture
    randomise
    simplify
    vtxlinks
    /;
#    cone
#    csvexport
#    finite

my @packetIcons = qw/
    angles
    container
    dim2triangulation
    filter
    pdf
    script
    snappea
    surfaces
    text
    triangulation
    /;
#    filter_comb
#    filter_prop

#    regina
#    x-regina

my $aux = undef;

sub usage {
    my $err = shift;
    $err and print STDERR "ERROR: $err\n\n";
    print STDERR "Usage: mkicons <path_to_regina-aux_checkout>\n";
    exit 1;
}

sub render {
    my $src = shift;
    my $size = shift;
    my $filename = shift;

    # `rsvg -w$size -h$size "$src" "$filename"`;
    `inkscape -z -e "$filename" -w $size -h $size "$src"`;
}

sub process {
    my $icon = shift;
    my $sizes = shift;
    my $src = shift;

    if (not -e $src) {
        print STDERR "ERROR: Could not find source: $src\n";
        return;
    }

    foreach (@$sizes) {
        render($src, $_, "$icon-$_.png");
        render($src, 2 * $_, "$icon-$_\@2x.png");
    }
}

$#ARGV == 0 or usage;

$aux = $ARGV[0];
-d "$aux" or usage "Argument \"$aux\" is not a directory.";
-e "$aux/icons/src/packets/triangulation.svg" or
    usage "Argument \"$aux\" does not look like a regina-aux checkout.";

foreach my $i (@actionIcons) {
    my $src = "$aux/icons/src/actions/$i.svg";
    process($i, \@actionSizes, $src);
}

foreach my $i (@packetIcons) {
    my $src = "$aux/icons/src/packets/$i.svg";
    process("packet_$i", \@packetSizes, $src);
}

