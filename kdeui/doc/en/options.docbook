<?xml version="1.0" ?>
<chapter id="options">
 <title>Configuration</title>
 <para>
  &regina; can be configured through the
   <menuchoice>
    <guimenu>Settings</guimenu>
    <guisubmenu>Configure Regina</guisubmenu>
   </menuchoice>
  menu item.  Several configuration pages are available, each of which
  is descrobed here.
 </para>

 <sect1 id="options-general">
  <title>General Options</title>

  <para>
   The following options are available on the general options page.
  </para>

  <glosslist>
   <glossentry>
    <glossterm>Automatic file extension</glossterm>
    <glossdef><para>
     This option can be toggled on or off; it represents whether a
     filename is modified before a &regina; data file is saved.
     When on, if the user does not specify a filename extension then the
     default extension of <filename>.rga</filename> will be appended.
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Automatic packet docking</glossterm>
    <glossdef><para>
     This option can be toggled on or off.  When off, any new packet
     viewers (created when you <link linkend="packet-view">view or edit
     a packet</link>) will be opened in
     separate floating windows.  When on, new packet viewers will be
     docked into the right-hand side of the
     <link linkend="shot-packettree">main &regina; window</link>
     if possible.
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Display icon</glossterm>
    <glossdef><para>
     This option can be toggled on or off; it represents whether the
     large &regina; icon will be displayed beneath the packet tree in
     the main window.
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Packet tree jump size</glossterm>
    <glossdef><para>
     This specifies how many steps a packet moves within the tree when
     the <guimenuitem>Jump Up</guimenuitem> or
     <guimenuitem>Jump Down</guimenuitem> menu items are selected
     (or the corresponding toolbar buttons pressed).
    </para></glossdef>
   </glossentry>
  </glosslist>
 </sect1>

 <sect1 id="options-triangulation">
  <title>Triangulation Options</title>

  <para>
   The following options are available on the triangulation page.
  </para>

  <glosslist>
   <glossentry>
    <glossterm>Edit mode</glossterm>
    <glossdef><para>
     This determines whether the triangulation gluings editor uses
     direct edit mode or pop-up dialog mode.  See the
     <link linkend="tri-editgluings">gluings editor documentation</link>
     for details.
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Default top-level tab</glossterm>
    <glossdef><para>
     This specifies which of the many tabs in the triangulation viewer
     will be made visible when a new triangulation viewer is first opened.
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Default algebra tab</glossterm>
    <glossdef><para>
     Within the triangulation viewer, the <guilabel>Algebra</guilabel>
     tab contains many smaller tabs of its own.  This option specifies which
     of these smaller tabs will be made visible when the
     <guilabel>Algebra</guilabel> tab is first selected.
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Surface calculation threshold</glossterm>
    <glossdef><para>
     This determines how many tetrahedra a triangulation must have
     before properties relating to its normal
     surfaces are not automatically calculated.  See the
     <link linkend="tri-surfaceproperties">normal surface properties
     documentation</link> for details.
    </para></glossdef>
   </glossentry>
  </glosslist>
 </sect1>

 <sect1 id="options-surfaces">
  <title>Normal Surface Options</title>

  <para>
   The following options are available on the normal surfaces page.
  </para>

  <glosslist>
   <glossentry>
    <glossterm>Default coordinate system</glossterm>
    <glossdef><para>
     This specifies which coordinate system will be offered as the
     default selection when a new normal surface list is created.
     See the
     <link linkend="surfaces-creation">normal surfaces documentation</link>
     for details.
    </para></glossdef>
   </glossentry>
  </glosslist>
 </sect1>

 <sect1 id="options-census">
  <title>Census Options</title>

  <para>
   The <link linkend="tri-censuslookup">census lookup facility</link>
   searches for the current triangulation within all available censuses.
   The census options page allows this list of available censuses to be
   configured.
  </para>
  <para>
   Census data files can be added or removed and
   currently active data files can be temporarily disabled.
   Each census should be a single &regina; data file.  The census lookup
   will search through all triangulations in each of the currently
   active files.
  </para>
  <para>
   By pressing the <guibutton>Defaults</guibutton> button, the list will
   be filled with a number of prepackaged censuses that are shipped with
   &regina;.  The <link linkend="tri-censuslookup">census lookup
   documentation</link> describes these prepackaged censuses in further
   detail.
  </para>
 </sect1>

 <sect1 id="options-python">
  <title>&python; Options</title>

  <para>
   The following options are available for fine-tuning the behaviour of
   &python; consoles.
  </para>
  <glosslist>
   <glossentry>
    <glossterm>Auto-indent</glossterm>
    <glossdef><para>
     If this option is set, each new command line will be automatically
     indented to match the previous line.  The indent is inserted into the
     command area and can of course be changed by backspacing or adding
     additional spaces.
    </para></glossdef>
   </glossentry>
   <glossentry>
    <glossterm>Spaces per tab</glossterm>
    <glossdef><para>
     Each command line is indented using spaces only, not tabs.  This option
     controls the number of spaces that are inserted into a command line
     when the <keycap>Tab</keycap> key is pressed.
    </para></glossdef>
   </glossentry>
  </glosslist>
  <para>
   In addition, the &python; options page allows the configuration of
   <firstterm>&python; libraries</firstterm>.  These are files containing
   &python; code that is run at the beginning of every &python;
   session, including every time a &python; console is opened,
   every time a script packet is run and every time the program
   <link linkend="man-regina-python"><command>regina-python</command></link>
   is started.
   See the <link linkend="python-overview">&python; scripting
   overview</link> for general information regarding &python; sessions.
  </para>
  <para>
   The list of currently active libraries is stored in the file
   &regina-libs;, which should be a plain text file
   containing one library filename per line.  Blank lines and lines
   beginning with a hash (#) are ignored.
  </para>
  <para>
   The &python; options page offers a convenient way of managing
   the &regina-libs; file.  Libraries can be added and removed through
   this page and currently active libraries can be temporarily disabled.
  </para>
  <!-- TODO: Put this in once it's reimplemented.
  <para>
   Each library also has a <guibutton>Compile</guibutton> button beside
   it.  Pressing this button will test whether or not the library
   actually compiles under &python;.  The library code will only be
   compiled; it will not be run.
  </para>
  -->
  <tip><para>
   A set of prepackaged &python; libraries that might be of use is
   provided with the &regina; distribution.  These libraries are
   generally installed in
   <filename>/usr/local/share/regina/pylib</filename> or
   <filename>/usr/share/regina/pylib</filename>, though this may differ
   with your distribution.
  </para></tip>
 </sect1>
</chapter>
