<chapter id="troubleshooting">
 <title>Troubleshooting and <acronym>FAQ</acronym></title>

 <qandaset>
  <qandadiv id="trouble-compile"><title>Compiling &regina;</title>
   <qandaentry>
    <question><para>
     The <userinput>./configure</userinput> script tells me that it
     can't find a library that it needs (such as
     <filename>libgmp</filename> or <filename>libxml2</filename>).
    </para></question>
    <answer>
     <para>
      First you should make sure that the library is installed.
      The &sysreq; on the &regina; website lists all of the
      required libraries and where you can obtain them.
     </para>
     <para>
      If the library has been installed in a non-standard location, you
      might need to pass its location to the
      <userinput>./configure</userinput> script.  For instance, if the
      library is installed beneath <filename>/usr/local</filename>
      with headers in <filename>/usr/local/include</filename> and
      the library itself in <filename>/usr/local/lib</filename>, you
      can pass the following options:
     </para>
     <para>
      <prompt>example$</prompt>
      <userinput>./configure --with-extra-includes=/usr/local/include
      --with-extra-libs=/usr/local/lib</userinput>
     </para>
     <para>
      Note that some libraries come with their own custom
      <userinput>./configure</userinput> options.  For instance, the
      location of the &qt; installation is specified using the option
      <option>--with-qt-dir</option>, and the location of the
      <filename>libxml2</filename> installation is specified using the
      option <option>--with-xml-prefix</option>.  Run
      <userinput>./configure --help</userinput> for details of all
      available options.
     </para>
    </answer>
   </qandaentry>

   <qandaentry>
    <question><para>
     The compile breaks somewhere beneath
     <filename>regina-<replaceable>version</replaceable>/kdeui/src</filename>
     with complaints of an undeclared identifier.
    </para></question>
    <answer>
     <para>
      Look at the error message to see which particular identifier has
      not been declared.  An example of such an error is reproduced
      below, where the undeclared identifier in this case is
      <varname>adjustColumn</varname>.
     </para>
<screen>
nanglestructureui.cpp: In constructor `NAngleStructureUI::NAngleStruct...
nanglestructureui.cpp:84: error: `adjustColumn' undeclared (first use ...
nanglestructureui.cpp:84: error: (Each undeclared identifier is report...
make[4]: *** [nanglestructureui.lo] Error 1
make[4]: Leaving directory `/home/bab/source/regina-4.0/kdeui/src/part...
</screen>
     <para>
      If the undeclared identifier is
      <varname>adjustColumn</varname> or
      <varname>SH_Table_GridLineColor</varname>,
      you almost certainly have a &qt; version problem.  &regina;
      requires &qt; version 3.2 or higher; trying to compile &regina;
      against &qt; 3.1 will result in errors such as these.
     </para>
     <para>
      Compatibility for &qt; 3.1 is being worked upon and will hopefully
      appear in future releases.
     </para>
     <para>
      As of &regina; 4.0.1, if your &qt; version is too old then
      the <userinput>./configure</userinput> script should complain
      before compilation begins.
     </para>
    </answer>
   </qandaentry>
  </qandadiv>

  <qandadiv><title>Running &regina;</title>
   <qandaentry id="troubleqn-prefix">
    <question><para>
     &regina; refuses to open any topology data files, claiming that an
     appropriate topology data component could not be found.
    </para></question>
    <answer>
     <para>
      It is critical that &regina; be installed in the same location as
      all other &kde; applications on your system.  For instance, if
      &kde; is installed beneath <filename>/opt/kde3</filename> then
      &regina; must be installed there also.
      Errors such as these occur when &regina; has been installed elsewhere,
      and &kde; cannot find one or more of its components.
     </para>
     <para>
      The installation in which &regina; is installed is controlled at
      compile-time, by passing a <option>--prefix</option> option to the
      <userinput>./configure</userinput> script.  Choosing the correct
      <option>--prefix</option> and then rebuilding and reinstalling
      &regina; will almost certainly fix this problem.
     </para>
     <para>
      To find which prefix you <emphasis>should</emphasis> be using,
      search for the <userinput>kde-config</userinput> program on your
      system.  Running <userinput>kde-config --prefix</userinput> will
      report the prefix that was used for your &kde; installation.  You
      must then pass this same prefix to <userinput>./configure</userinput>.
     </para>
     <para>
      For instance, if <userinput>kde-config --prefix</userinput>
      reports <computeroutput>/usr</computeroutput> then you should
      start your &regina; build with
      <userinput>./configure --prefix=/usr</userinput> as illustrated
      below.
     </para>
<screen>
<prompt>example:~/source/regina&gt;</prompt> <userinput>kde-config --prefix</userinput>
/usr
<prompt>example:~/source/regina&gt;</prompt> <userinput>./configure --prefix=/usr</userinput>
checking build system type... i686-pc-linux-gnu
checking host system type... i686-pc-linux-gnu
...
</screen>
     <para>
      As of &regina; 4.0.1, the <userinput>./configure</userinput>
      script makes an intelligent guess at the correct prefix if you
      don't provide one yourself.
     </para>
    </answer>
   </qandaentry>

   <qandaentry>
    <question><para>
     I see no way to create a new topology data file.  There is no
     <guimenuitem>New Topology Data</guimenuitem>
     menu item and no correponding toolbar button.
    </para></question>
    <answer>
     <para>
      These symptoms are caused by the same <option>--prefix</option>
      issue described in the <link linkend="troubleqn-prefix">previous
      question</link>, and can be fixed the same way.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="trouble-packet-uneditable">
    <question><para>
     I cannot edit a particular packet.  I can view it but I can't change
     anything.
    </para></question>
    <answer>
     <para>
      If a packet has children that need their parent
      to remain constant, it will
      become uneditable.  An example is a triangulation that has a normal
      surface list as a child.  The normal surface list stores coordinates
      based upon the triangulation that created it, so the triangulation
      must remain constant or else the coordinates will become invalid.
     </para>
     <para>
      In such a situation you can try <link linkend="packet-clone">cloning
      the packet</link> without its subtree (<menuchoice>
       <guimenu>Packet Tree</guimenu>
       <guimenuitem>Clone Packet</guimenuitem>
      </menuchoice>).  The clone will have no children to worry about
      and so should be editable.  Alternatively you could delete the child
      packet that is refusing to allow its parent to change.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="trouble-python-disabled">
    <question><para>
     The program complains that &python; scripting has been disabled.
    </para></question>
    <answer>
     <para>
      This means that &regina; was not built with &python; support
      enabled.  You will need to rebuild &regina; from sources &ndash;
      instructions for doing this are provided in the file
      <filename>README.txt</filename> in the &regina; source
      distribution.
     </para>
     <para>
      When running <userinput>./configure</userinput> (the first step of
      building &regina;), watch the output carefully.  It will tell you
      whether it plans to build the &python; interface, and if not it
      should give you a clear reason why.
     </para>
     <para>
      The most common cause for &python; support being disabled
      is that no usable &boost-python; installation could be found at
      compile time.  Make sure you have &boost-python; installed from
      <ulink url="http://www.boost.org/"/>.  If it is installed in a
      non-standard location you may need to pass this location to the
      <userinput>./configure</userinput> script using options
      <option>--with-extra-includes</option> and
      <option>--with-extra-libs</option>.
      Note that &boost-python; requires the standard &python; headers to
      be installed as well.
     </para>
     <para>
      If this does not help, please mail &reguserlist; for assistance,
      preferably including your <filename>config.log</filename> to help
      diagnose the problem.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="trouble-python-typeerror">
    <question><para>
     While working with a &python; object I receive a
     <exceptionname>TypeError</exceptionname> with the message
     &quot;bad argument type for built-in operation&quot;.
     I know the object is valid since I've used it earlier without problems.
    </para></question>
    <answer>
     <para>
      You may have run into an unusual &boost-python; issue regarding
      ownership semantics.  If you have been rearranging the packet tree
      using <function>NPacket.insertChildFirst()</function>,
      <function>NPacket.insertChildLast()</function> or
      <function>NPacket.insertChildAfter()</function> then this is
      particularly likely.
     </para>
     <para>
      See the <link linkend="python-ownership">&python; caveats</link>
      documentation for a description of this problem and how to
      work around it.
     </para>
    </answer>
   </qandaentry>
  </qandadiv>

  <qandadiv><title>Miscellaneous</title>
   <qandaentry id="trouble-testsuite">
    <question><para>
     What is the test suite, and how do I run it?
    </para></question>
    <answer>
     <para>
      Sometimes, building an application on significantly different
      hardware or against different versions of helper libraries can lead
      to unforseen bugs that do not appear on the developer's machine(s).
      To help guard against such problems, &regina; ships with a test
      suite.  The test suite uses &regina; to perform a variety of
      different computations that isolate different portions of
      &regina;'s mathematical code, and it verifies that &regina; gets
      the answers correct.
     </para>
     <para>
      The test suite comes with the &regina; source distribution, and it
      assumes that you are building &regina; yourself.  Note that the
      test suite requires <application>CppUnit</application> to be
      installed, as described on the &sysreq; on the &regina; website.
     </para>
     <para>
      To build and run the test suite, simply move into the main source
      directory and type <userinput>make check</userinput>.  After the
      test suite has been compiled, you should see the individual tests
      being run as illustrated below.
     </para>
<screen>
<prompt>example:~/source/regina&gt;</prompt> <userinput>make check</userinput>
Making check in engine
make[1]: Entering directory `/home/bab/source/regina/engine'
...
... (compiling the test suite)
...
make[3]: Entering directory `/home/bab/source/regina/testsuite'
Regina calculation engine test suite

NIndexedArrayTest.basicChecks... ok.
NIndexedArrayTest.constructors... ok.
NIndexedArrayTest.swap... ok.
NIndexedArrayTest.inserts... ok.
NIndexedArrayTest.erasures... ok.
...
... (running lots more tests)
...
NAngleStructureListTest.loopC2... ok.
NCensusTest.rawCounts... ok.
NCensusTest.rawCountsPrimeMinimalOr... ok.
NCensusTest.rawCountsPrimeMinimalNor... ok.
NFacePairingTest.rawCounts... ok.


OK (54 tests)


PASS: regtestsuite
==================
All 1 tests passed
==================
make[3]: Leaving directory `/home/bab/source/regina/testsuite'
...
... (more output from make)
...
make[1]: Leaving directory `/home/bab/source/regina'
<prompt>example:~/source/regina&gt;</prompt>
</screen>
     <para>
      We see from the output above that the test suite ran as expected
      and that all tests were passed.
     </para>
    </answer>
   </qandaentry>

   <qandaentry>
    <question><para>
     Something else beyond this rather wanting list of suggestions has gone
     wrong.  Perhaps something crashed.  Maybe the program gave the wrong
     answer.  Or it could be just a little too slow.
    </para></question>
    <answer>
     <para>
      Please! - mail me at &regemail; and let me know.  Or even better,
      use the <link linkend="services">&sourceforge; services</link>
      such as the bug tracking system and mailing lists so that the
      problem you report is publicly archived.
     </para>
     <para>
      This program is permanently in development.  There is a very
      long &todo; list, and chances are your problem is on it.  And
      then again chances are it's not.  So please let me know so I
      am sure to know what needs to be fixed/improved.
     </para>
    </answer>
   </qandaentry>
  </qandadiv>
 </qandaset>
</chapter>

