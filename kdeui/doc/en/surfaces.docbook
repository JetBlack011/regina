<?xml version="1.0" ?>
<chapter id="surfaces">
 <title>Normal Surfaces</title>

 <para>
  <inlinemediaobject>
   <imageobject>
    <imagedata fileref="largeicon.png" align="right"/>
   </imageobject>
  </inlinemediaobject>
  The primary motivation for ever writing &regina; was to create a
  tool for calculating vertex normal surfaces within a triangulation.
 </para>
 <para>
  A <firstterm>normal surface</firstterm> inside a 3-manifold
  triangulation is a surface composed entirely of normal discs.  A
  <firstterm>normal disc</firstterm> sits inside a single tetrahedron
  (and splits that tetrahedron into two pieces), and must be either a
  triangle (touching three of the four tetrahedron edges) or a
  quadrilateral (touching all four of the tetrahedron edges).
 </para>
 <para>
  The &regina; logo shown on this page illustrates all four possible
  triangle types and one of the three possible
  quadrilateral types within a tetrahedron.
 </para>
 <para>
  &regina; will also calculate <firstterm>almost normal
  surfaces</firstterm>, which have the same restrictions as normal
  surfaces except that they must contain precisely one additional
  octahedral disc.
  An octahedral disc touches each tetrahedron edge twice, and there are
  three possible types of octahedral disc.
 </para>
 <para>
  Normal surfaces are represented as integer vectors indictaing how many
  discs of each type in each tetrahedron are used to make up the surface.
 </para>
 <para>
  A summary of normal surface theory that should cover enough to use this
  program can be found in <link linkend="bib-burton-phd">Ben Burton's
  PhD thesis</link>
  (see the <link linkend="bibliography">bibliography</link>).
 </para>

 <warning>
  <para>
   A normal surface list in the packet tree <emphasis>must</emphasis> be a
   child packet of the triangulation in which the surfaces are contained.
  </para>
  <para>
   Furthermore, since each normal surface is stored as a vector relative
   to the triangulation's tetrahedra, a triangulation cannot be changed
   once it has a child normal surface list packet.  If you wish to edit
   such a triangulation, try cloning the packet (excluding descendants so
   the normal surfaces are not cloned as well) and edit the clone instead.
  </para>
 </warning>

 <sect1 id="surfaces-creation">
  <title>Creation</title>

  <para>
   A new list of normal surfaces can be created through the
   <menuchoice>
    <guimenu>Packet</guimenu>
    <guisubmenu>New</guisubmenu>
    <guimenuitem>Normal Surface List</guimenuitem>
   </menuchoice>
   menu item.
  </para>
  <para>
   Only <firstterm>vertex normal surfaces</firstterm> will be placed in
   the new list; all other normal surfaces can be formed as non-negative
   linear combinations of these vertex surfaces.
  </para>
  <para>
   Before the normal surface list is created, you will be asked for some
   additional details as follows.
   <glosslist>
    <glossentry>
     <glossterm>Derive From</glossterm>
     <glossdef>
      <para>
       Here you must select the triangulation that will contain the new
       normal surfaces.  This triangulation should be some packet in
       the packet tree.
      </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>Coordinates</glossterm>
     <glossdef>
      <para>
       Here you must select the coordinate system in which the normal
       surface vectors will be created.
      </para>
      <para>
       Whether or not almost normal surfaces are created (in addition to
       just normal surfaces) will depend upon this choice of
       coordinate system.
       Currently almost normal surfaces are only created when using
       standard almost normal coordinates.
      </para>
      <para>
       Note that this coordinate system refers only to creation; you will
       be able to view these normal surfaces in a variety of different
       coordinate systems.
      </para>
      <para>
       Note also that this choice of coordinate system will affect which
       normal surfaces are produced.  For instance, quad normal
       coordinates produce spun normal surfaces (which standard normal
       coordinates do not), and standard normal coordinates produce vertex
       links (which quad normal coordinates do not).
      </para>
     </glossdef>
    </glossentry>
    <glossentry>
     <glossterm>Embedded Surfaces Only</glossterm>
     <glossdef>
      <para>
       Here you must specify whether the search should be restricted to
       embedded surfaces only (this is the default and is all that is
       considered in most of the published theory).
      </para>
      <para>
       Be aware that a search that is
       broadened to all surfaces (embedded, immersed and singular) is likely
       to take somewhat longer to run than the corresponding embedded-only
       search.
      </para>
     </glossdef>
    </glossentry>
   </glosslist>
  </para>
 </sect1>

 <sect1 id="surfaces-analysis">
  <title>Analysis</title>

  <para>
   Various properties of the normal surfaces that form a surface list
   are available; most of these properties can be viewed by clicking on the
   different tabs in the normal surface list viewer.
  </para>

  <sect2 id="surfaces-viewlistprops">
   <title>Basic Surface List Properties</title>

   <para>
    Above all of the tabs in the surface list viewer are displayed some
    basic properties of the normal surface list.  These include:
    <itemizedlist>
     <listitem><para>
      a count of the total number of vertex normal surfaces contained within;
     </para></listitem>
     <listitem><para>
      a reminder of whether or not the original surface search was restricted
      to embedded surfaces only.  Note that this does
      <emphasis>not</emphasis> actually look at the surfaces in the list
      - an unrestricted search might have only produced embedded
      surfaces, but this reminder will still say
      <literal>embedded/immersed/singular</literal>.
     </para></listitem>
    </itemizedlist>
   </para>
  </sect2>

  <sect2 id="surfaces-viewsurfacecoords">
   <title>Individual Surface Coordinates</title>

   <para>
    The <guilabel>Surface Coordinates</guilabel> tab in the surface list
    viewer contains a table of all the individual vertex surfaces that form
    this list.  Each surface is presented as a vector in some underlying
    coordinate system (this coordinate system is displayed immediately
    above the table).
   </para>
   <para>
    Each row of this table represents an individual normal surface.
    The left few columns of the table contain various miscellaneous surface
    properties (see the <link
    linkend="surfaces-viewsurfaceprops">individual surface properties</link>
    section below).  The remaining columns contain the actual surface
    coordinates.
   </para>
   <para>
    To change the coordinate system in which you are viewing the
    surfaces, simply select a new coordinate system from the drop-down
    box above the table.  Note that this will <emphasis>not</emphasis>
    regenerate the vertex normal surfaces in the new coordinate system;
    it will simply rewrite the surfaces that you already have in the new
    system.  So, for instance, if a spun surface is created during a quad
    space search and the surfaces are viewed in standard (tri-quad)
    coordinates, this spun surface will remain in the table with
    triangular coordinates of infinity.  Furthermore, vertex links (which
    are not found during a quad space search) will not suddenly appear
    in the list.
   </para>
   <para>
    The meanings of the individual coordinate columns in the table
    depend upon the underlying coordinate system and are described below.
    <glosslist>
     <glossentry>
      <glossterm>Standard normal (tri-quad) coordinates</glossterm>
      <glossdef>
       <para>
        Standard normal coordinates simply count the number of triangular
        and quadrilateral discs of each type in each tetrahedron.
       </para>
       <para>
        Triangular coordinates are labelled
        <literal>0:0</literal>, <literal>0:1</literal>,
        <literal>0:2</literal>, <literal>0:3</literal>,
        <literal>1:0</literal>, <literal>1:1</literal>,
        <literal>1:2</literal>, <literal>1:3</literal>,
        <literal>2:0</literal>, etc.  Coordinate
        <literal><replaceable>t</replaceable>:<replaceable>v</replaceable></literal>
        represents the number of triangular discs in tetrahedron
        <replaceable>t</replaceable> that separate vertex
        <replaceable>v</replaceable> of that tetrahedron from the other
        three tetrahedron vertices
        (<replaceable>v</replaceable> will always be 0, 1, 2 or 3).
       </para>
       <para>
        Quadrilateral coordinates are labelled
        <literal>0:01/23</literal>, <literal>0:02/13</literal>,
        <literal>0:03/12</literal>, <literal>1:01/23</literal>,
        <literal>1:02/13</literal>, <literal>1:03/12</literal>,
        <literal>2:01/23</literal>, etc.  Coordinate
        <literal><replaceable>t</replaceable>:<replaceable>ab</replaceable>/<replaceable>cd</replaceable></literal>
        represents the number of quadrilateral discs in tetrahedron
        <replaceable>t</replaceable> that separate vertices
        <replaceable>a</replaceable> and <replaceable>b</replaceable>
        of that tetrahedron from vertices
        <replaceable>c</replaceable> and <replaceable>d</replaceable>
        of that tetrahedron
        (<replaceable>a</replaceable>, <replaceable>b</replaceable>,
        <replaceable>c</replaceable> and <replaceable>d</replaceable>
        will always be 0, 1, 2 and 3 in some order).
       </para>
      </glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Quad normal coordinates</glossterm>
      <glossdef>
       <para>
        Quad normal coordinates are identical to standard normal
        (tri-quad) coordinates except that only quadrilateral discs are
        considered.
       </para>
      </glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Standard almost normal (tri-quad-oct) coordinates</glossterm>
      <glossdef>
       <para>
        Standard almost normal coordinates are identical to standard
        normal coordinates except that octahedral discs are also
        considered.
       </para>
       <para>
        Octahedral discs are labelled similarly to quadrilateral discs
        (each octahedral disc also separates some two vertices of the
        corresponding tetrahedron from the other two).  To make it clear
        which coordinates are which, each triangle label begins with a
        <literal>T</literal>, each quadrilateral label begins with
        a <literal>Q</literal> and each octahedral label begins
        with a <literal>K</literal>.
       </para>
      </glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Edge weight coordinates</glossterm>
      <glossdef>
       <para>
        The coordinates are labelled <literal>0</literal>,
        <literal>1</literal>, <literal>2</literal>, etc.  Coordinate
        <replaceable>e</replaceable> represents the number of times the
        surface crosses edge <replaceable>e</replaceable> of the
        triangulation.
       </para>
       <para>
        Edge numbers and the tetrahedron edges/vertices to which they
        correspond can be found in the skeleton section of the
        <link linkend="tri-vertexedgeface">triangulation viewer</link>.
       </para>
      </glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Face arc coordinates</glossterm>
      <glossdef>
       <para>
        The coordinates are labelled
        <literal>0:0</literal>, <literal>0:1</literal>, <literal>0:2</literal>,
        <literal>1:0</literal>, <literal>1:1</literal>, <literal>1:2</literal>,
        <literal>2:0</literal>, etc.  Coordinate
        <literal><replaceable>f</replaceable>:<replaceable>v</replaceable></literal>
        represents the number of times the surface slices through face
        <replaceable>f</replaceable> of the triangulation in an arc
        that truncates vertex <replaceable>v</replaceable> of that face
        (<replaceable>v</replaceable> will always be 0, 1 or 2).
       </para>
       <para>
        Face numbers and the tetrahedron faces/vertices to which they
        correspond can be found in the skeleton section of the
        <link linkend="tri-vertexedgeface">triangulation viewer</link>.
       </para>
      </glossdef>
     </glossentry>
    </glosslist>
   </para>
  </sect2>

  <sect2 id="surfaces-viewsurfaceprops">
   <title>Individual Surface Properties</title>

   <para>
    As described in the
    <link linkend="surfaces-viewsurfacecoords">surface coordinates</link>
    section above, the <guilabel>Surface Coordinates</guilabel> tab in the
    surface list viewer contains a table of every vertex
    surface contained in this list.
   </para>
   <para>
    The left few columns of this table contain a variety of surface
    properties as described below.  Note that not all of these properties
    are available in all situations (for instance, Euler characteristic
    is not yet calculated for non-compact surfaces, and the orientability
    column will not even appear if the surface list might include
    non-embedded surfaces).
   </para>
   <para>
    <glosslist>
     <glossentry>
      <glossterm>Name</glossterm>
      <glossdef>
       <para>
        Individual surfaces can be optionally named to help keep track of
        additional properties that have been derived by hand.  Surface
        names do not need to be unique.
       </para>
       <para>
        To rename a surface, just click on the corresponding table cell
        and type the new name directly into that table cell.
       </para>
      </glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Euler</glossterm>
      <glossdef><para>
       This column shows the Euler characteristic of each surface.
      </para></glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Orient</glossterm>
      <glossdef><para>
       This column shows whether or not each surface is orientable.
      </para></glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Sides</glossterm>
      <glossdef><para>
       This column shows whether each surface is one-sided or two-sided.
      </para></glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Bdry</glossterm>
      <glossdef><para>
       This column shows whether or not each surface meets the boundary of the
       enclosing triangulation.
      </para></glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Link</glossterm>
      <glossdef><para>
       If a normal surface (or a rational multiple of that surface)
       is recognised as being a link of any interesting subcomplexes
       in the triangulation, these subcomplexes will be listed in
       this column.  The following links are currently recognised.
       <glosslist>
        <glossentry>
         <glossterm>Vertex</glossterm>
         <glossdef><para>
          Indicates that the surface is an individual vertex link.
          The corresponding vertex number in the triangulation will be
          listed.
         </para>
         <para>
          Vertex numbers and the tetrahedron vertices to which they
          correspond can be found in the skeleton section of the
          <link linkend="tri-vertexedgeface">triangulation viewer</link>.
         </para></glossdef>
        </glossentry>
        <glossentry>
         <glossterm>Thin Edge</glossterm>
         <glossdef><para>
          Indicates that the surface is an individual thin edge link.
          The corresponding edge number(s) in the triangulation will be
          listed.  Note that a surface might be both the link of one thin
          edge and also (independently) the link of another thin edge.
         </para>
         <para>
          Edge numbers and the tetrahedron edges/vertices to which they
          correspond can be found in the skeleton section of the
          <link linkend="tri-vertexedgeface">triangulation viewer</link>.
         </para></glossdef>
        </glossentry>
       </glosslist>
      </para></glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Crush</glossterm>
      <glossdef>
       <para>
        This column signifies whether the program can deduce that the
        surface can be crushed to a point in the underlying triangulation
        with no unintended topological side-effects.
        Unintended side-effects include any topological changes other than
        the pure topological effects of cutting along this surface and
        then identifying the new boundary surface(s) to points.
       </para>
       <para>
        Note that this column will only ever contain
        <literal>Yes</literal> or <literal>Unknown</literal>, according
        to whether the surface can with certainty be crushed or whether
        the program cannot deduce this result on its own.
       </para>
      </glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Type</glossterm>
      <glossdef><para>
       If a normal surface is recognised as playing a particular role in
       the triangulation, that role will be listed in this column.  At
       most one such role will be displayed for any particular surface.
       The following roles are currently recognised.
       <glosslist>
        <glossentry>
         <glossterm>Splitting</glossterm>
         <glossdef><para>
          Indicates that the surface is a splitting surface (contains
          precisely one quadrilateral per tetrahedron and no other normal
          or almost normal discs).
         </para></glossdef>
        </glossentry>
       </glosslist>
      </para></glossdef>
     </glossentry>
    </glosslist>
   </para>
  </sect2>

  <sect2 id="surfaces-viewmatching">
   <title>Original Matching Equations</title>

   <para>
    The <guilabel>Matching Equations</guilabel> tab in the surface list
    viewer contains a table of the individual matching equations that
    were used to form this list of vertex surfaces.
   </para>
   <para>
    The matching equations are presented in the coordinate system that
    was used to originally create this surface list (see the
    <link linkend="surfaces-creation">surface list creation reference</link>).
    This coordinate system is displayed immediately above the table.
   </para>
   <para>
    Each row of this table represents an individual matching equation.
    A matching equation involves setting a linear combination of surface
    coordinates to zero; the coefficients of this linear combination are
    shown in the individual table cells.  A description of what the individual
    surface coordinates mean can be found in the
    <link linkend="surfaces-viewsurfacecoords">individual surface
    coordinates</link> section above.
   </para>
  </sect2>
 </sect1>

 <sect1 id="surfaces-crushandcut">
  <title>Crushing and Cutting</title>

  <para>
   In certain situations normal surfaces can be used to
   decompose the underlying triangulation into smaller and/or simpler
   components.  The available ways in which this can be done are as
   follows.
  </para>

  <sect2>
   <title>Crushing a Surface</title>
   <para>
    A normal surface can be crushed to a point in the underlying
    triangulation using the <guibutton>Crush</guibutton> button
    under the <guilabel>Surface Coordinates</guilabel> tab in the
    surface list viewer.  Simply select the surface to crush in the
    surface table and press this <guibutton>Crush</guibutton> button.
   </para>
   <para>
    The original triangulation will not be changed; a new triangulation with
    the corresponding surface crushed will appear as a child packet of this
    surface list.
   </para>
   <para>
    Note that crushing a normal surface might change the topology of the
    underlying 3-manifold (beyond the simple act of slicing along the
    surface) and in some cases might introduce ideal vertices
    or even invalid edges.  For details see
    <ulink url="engine/classregina_1_1NNormalSurface.html"><function><classname>NNormalSurface</classname>::crush()</function></ulink>
    in the calculation engine documentation.
   </para>
  </sect2>
  <sect2>
   <title>Cutting Along a Surface</title>
   <para>
    Instead of crushing a surface to a point, one might wish to simply
    slice along the surface and subdivide the resulting polyhedra into
    tetrahedra to produce a new triangulation.
   </para>
   <para>
    This has the advantage over crushing in that it will never change
    the topology of the underlying 3-manifold beyond the act of simply
    slicing along the surface.  It will also never introduce new ideal
    vertices or invalid edges.
   </para>
   <para>
    This has the disadvantage however that after cutting along a surface
    the number of tetrahedra in the triangulation can be expected to
    skyrocket.
   </para>
   <para>
    But just like the waiter in Stillwater who talked us through the wine
    list before explaining he couldn't actually sell us any because it
    was Sunday, at this point I explain that cutting along a surface is
    not yet implemented in &regina;.  It's on the TODO list.
   </para>
  </sect2>
 </sect1>

 <sect1 id="surfaces-filtering">
  <title>Filtering (INCOMPLETE)</title>

  <para>
   Documentation for normal surface filters is still to be written.
  </para>
  <para>
   Meanwhile have a play around with creating filter packets, or take a
   look at the sample data files included in the &regina; distribution.
  </para>
 </sect1>
</chapter>
