<chapter id="surfaces">
 <title>Normal Surfaces</title>

 <para>
  <inlinemediaobject>
   <imageobject>
    <imagedata fileref="normaldiscs.png" align="right"/>
   </imageobject>
  </inlinemediaobject>
  A <firstterm>normal surface</firstterm> is a surface within a
  3-manifold triangulation that meets each tetrahedron in a collection
  of triangles and/or quadrilaterals, as illustrated to the right.
  For a nice overview of normal surface theory, see
  <xref linkend="bib-hass-knotnp"/>.
 </para>
 <para>
  &regina; typically works with embedded normal surfaces, but it also offers
  basic support for immersed and singular surfaces.  In addition, it can
  work with <firstterm>almost normal surfaces</firstterm>
  (which are like normal surfaces but with an extra
  &ldquo;exceptional disc&rdquo;)
  and <firstterm>spun normal surfaces</firstterm> (with infinitely
  many triangles spinning out towards the vertices).
 </para>
 <para>
  For almost normal surfaces, &regina; uses the restricted definition
  of Thompson <xref linkend="bib-thinposition"/>
  where the exceptional piece is an octagon>.
  &regina; does not currently support the more general definition
  of Rubinstein <xref linkend="bib-rubin-3sphere1"/> where the exception
  piece may be either an octagon or a tube.
 </para>

 <sect1 id="surfaces-creation">
  <title>Enumerating Normal Surfaces</title>

  <para>
   Normal surfaces are stored in lists, which typically represent all
   vertex normal (or almost normal) surfaces within a triangulation
   in some normal coordinate system.
  </para>
  <para>
   A normal surface list must remain &ldquo;connected&rdquo; to the
   corresponding triangulation.  It always lives immediately beneath the
   triangulation in the packet tree, and the triangulation
   <link linkend="packet-uneditable">cannot be modified</link>
   unless all of its normal surface lists are deleted.
   The triangulation will be marked with a small padlock to remind you
   of this.
  </para>
  <para>
   <inlinemediaobject>
    <imageobject>
     <imagedata fileref="surfaces-intree.png"/>
    </imageobject>
   </inlinemediaobject>
  </para>
  <para>
   To create a new normal surface list, select
   <menuchoice>
    <guimenu>Packet Tree</guimenu>
    <guimenuitem>New Normal Surface List</guimenuitem>
   </menuchoice>
   from the menu (or press the corresponding toolbar button).
  </para>
  <para>
   <inlinemediaobject>
    <imageobject>
     <imagedata fileref="menu-newsurfaces.png"/>
    </imageobject>
   </inlinemediaobject>
  </para>
  <para>
   You will be offered the usual <link linkend="packet-new">new
   packet</link> window, as shown below.
  </para>
  <para>
   <inlinemediaobject>
    <imageobject>
     <imagedata fileref="newsurfaces.png"/>
    </imageobject>
   </inlinemediaobject>
  </para>
  <para>
   In addition to the <link linkend="packet-new">usual label option</link>,
   there are important details that you must provide:
   <glosslist>
    <glossentry>
     <glossterm><guilabel>Triangulation</guilabel></glossterm>
     <glossdef>
      <para>
       This is the triangulation that will contain your normal surfaces.
       The new normal surface list will appear as a child of this
       triangulation in the packet tree.
      </para>
     </glossdef>
    </glossentry>
    <glossentry id="surfaces-selectcoords">
     <glossterm><guilabel>Coordinate system</guilabel></glossterm>
     <glossdef>
      <para>
       This is the coordinate system that &regina; will use to enumerate
       normal surfaces.
       If you have a favourite system that you use all the
       time, you can change the default in &regina;'s
       <link linkend="options-surfaces">normal surface options</link>.
       The choices are:
       <glosslist>
        <glossentry>
         <glossterm><guilabel>Standard normal (tri-quad)</guilabel></glossterm>
         <glossdef>
          <para>
           This is the standard 7<replaceable>n</replaceable>-dimensional
           coordinate system that typically appears in papers and textbooks
           (where <replaceable>n</replaceable> is the number of tetrahedra).
           Each tetrahedron contributes three triangle and four
           quadrilateral coordinates.
          </para>
         </glossdef>
        </glossentry>
        <glossentry>
         <glossterm><guilabel>Standard almost normal
          (tri-quad-oct)</guilabel></glossterm>
         <glossdef>
          <para>
           This is a 10<replaceable>n</replaceable>-dimensional system,
           obtained from standard normal coordinates by adding three
           octagon coordinates per tetrahedron.
          </para>
          <para>
           This system supports almost normal surfaces.
          </para>
         </glossdef>
        </glossentry>
        <glossentry>
         <glossterm><guilabel>Quad normal</guilabel></glossterm>
         <glossdef>
          <para>
           These are the 3<replaceable>n</replaceable>-dimensional
           <firstterm>quadrilateral coordinates</firstterm>,
           obtained from standard normal coordinates by simply ignoring all
           triangles.  See <xref linkend="bib-quadspace"/> or
           <xref linkend="bib-burton-convert"/> for details.
          </para>
          <para>
           This system supports spun normal surfaces.
          </para>
         </glossdef>
        </glossentry>
        <glossentry>
         <glossterm><guilabel>Quad-oct almost normal</guilabel></glossterm>
         <glossdef>
          <para>
           These are the 6<replaceable>n</replaceable>-dimensional
           <firstterm>quadrilateral-octagon coordinates</firstterm>,
           likewise obtained from standard almost normal coordinates by
           ignoring all triangles.  See <xref linkend="bib-burton-quadoct"/>
           for details.
          </para>
          <para>
           This system supports both almost normal surfaces
           and spun normal surfaces.
          </para>
         </glossdef>
        </glossentry>
       </glosslist>
      </para>
     </glossdef>
    </glossentry>
    <glossentry id="surfaces-embeddedonly">
     <glossterm><guilabel>Embedded surfaces only</guilabel></glossterm>
     <glossdef>
      <para>
       If this box is checked (the default), this indicates that you are
       only interested in embedded surfaces.  This is consistent with most
       of the normal surface literature.
      </para>
      <para>
       If unchecked, this indicates that you are interested not only in
       embedded normal surfaces, but also <emphasis>immersed</emphasis>
       and <emphasis>singular</emphasis> surfaces.
       &regina; currently offers only very basic support for such
       surfaces (it will not even tell you which are immersed and which are
       singular); moreover, the enumeration of surfaces
       will become <emphasis>much</emphasis> slower.
      </para>
     </glossdef>
    </glossentry>
   </glosslist>
  </para>
  <para>
   Once you are ready, click <guibutton>OK</guibutton> and &regina;
   will enumerate all vertex normal surfaces in the chosen coordinate
   system.
  </para>
  <para>
   <inlinemediaobject>
    <imageobject>
     <imagedata fileref="surfaces-enumerating.png" align="right"/>
    </imageobject>
   </inlinemediaobject>
  </para>
  <para>
   Once this is done, &regina; will package the vertex normal surfaces
   into a normal surface list and open it for you to view.
  </para>
  <para>
   If you selected an <emphasis>almost normal</emphasis> coordinate
   system, &regina; will enforce at most one octagon
   <emphasis>type</emphasis> but it will not enforce precisely one
   octagon <emphasis>disc</emphasis> (this makes it easier for users
   to work with convex combinations of vertex almost normal surfaces).
   As a result, you might see
   surfaces with multiple octagons (but all of the same type),
   or surfaces with no octagons at all.  The coordinate viewer makes it easy
   <link linkend="surfaces-propoctagon">to spot which is which</link>.
  </para>
  <warning>
   <para>
    If you have a data file from &regina;&nbsp;4.5.1 or earlier,
    it will not show almost normal surfaces with more than one octagon.
    See the discussion on <link linkend="surfaces-deflegacyan">legacy
    coordinates</link> for details.
   </para>
  </warning>
 </sect1>

 <sect1 id="surfaces-analysis">
  <title>Analysis</title>

  <para>
   Several properties of a normal surface list and its individual surfaces
   are available; most of these properties can be viewed by clicking on the
   different tabs in the normal surface list viewer.
  </para>
  <para>
   Above all of the tabs in the surface list viewer, a header is displayed
   with some basic properties of the normal surface list.  These include:
   <itemizedlist>
    <listitem><para>
     a count of the total number of vertex normal surfaces contained in
     the list;
    </para></listitem>
    <listitem><para>
     a reminder of how the surface list was
     originally created, including the coordinate system used and
     whether or not the search was restricted
     to embedded surfaces only.  Note that this does
     not actually look at the surfaces in the list
     &ndash; an unrestricted search might have only produced embedded
     surfaces, but this reminder will still say
     <literal>embedded/immersed/singular</literal>.
    </para></listitem>
   </itemizedlist>
  </para>
  <tip><para>
   If the header says that the list was created using
   <emphasis>legacy</emphasis> almost normal coordinates, this means
   the list was created using &regina;&nbsp;4.5.1 or earlier, and that
   all surfaces with more than one octagon were deleted.
   See the notes below on
   <link linkend="surfaces-deflegacyan">coordinates systems</link>
   for details.
  </para></tip>

  <sect2 id="surfaces-summary">
   <title>Summary of Surfaces</title>

   <para>
    The first tab contains a summary of what kinds of surfaces were found.
    This summary breaks the total count down into several
    sub-counts, as illustrated in the screenshot below.
    These counts are first organised by boundary, where we distinguish
    between closed surfaces, bounded surfaces (which have real boundary)
    and non-compact surfaces (which have infinitely many normal or
    almost normal discs).  Within each section, the counts are then
    broken down further by Euler characteristic, orientability,
    and one-or-two-sidedness.
    For further information on these properties, see the documentation on
    <link linkend="surfaces-coords-props">individual
    surface properties</link>.
   </para>
   <para>
    <screenshot>
     <screeninfo>The summary tab for a normal surface list</screeninfo>
     <mediaobject>
      <imageobject>
       <imagedata fileref="surfaces-summary.png"/>
      </imageobject>
      <textobject>
       <phrase>The summary tab for a normal surface list</phrase>
      </textobject>
      <caption><para>The summary tab for a normal surface list</para></caption>
     </mediaobject>
    </screenshot>
   </para>
  </sect2>

  <sect2 id="surfaces-coords">
   <title>Individual Properties and Coordinates</title>

   <para>
    The <guilabel>Surface Coordinates</guilabel> tab in the surface list
    viewer contains a table of all the vertex surfaces that form
    this list.  Each surface is presented as a vector in some underlying
    coordinate system (this coordinate system is displayed immediately
    above the table).
   </para>
   <para>
    Each row of this table represents a single normal surface.
    The left few columns of the table contain various surface
    properties (see the <link
    linkend="surfaces-coords-props">individual surface properties</link>
    section below).  The remaining columns contain the actual surface
    coordinates.  This is illustrated in the screenshot below.
   </para>
   <para>
    <screenshot>
     <screeninfo>The coordinates tab for a normal surface list</screeninfo>
     <mediaobject>
      <imageobject>
       <imagedata fileref="surfaces-coords.png"/>
      </imageobject>
      <textobject>
       <phrase>The coordinates tab for a normal surface list</phrase>
      </textobject>
      <caption><para>The coordinates tab for a normal surface
       list</para></caption>
     </mediaobject>
    </screenshot>
   </para>
   <para>
    To change the coordinate system in which you are viewing the
    surfaces, simply select a new coordinate system from the drop-down
    box above the table.  Note that this will <emphasis>not</emphasis>
    regenerate the vertex normal surfaces in the new coordinate system;
    it will simply redisplay the surfaces that you already have in the new
    system.  So, for instance, if a spun surface is created during a quad
    space search and the surfaces are viewed in standard (tri-quad)
    coordinates, this spun surface will be redisplayed in the table with
    triangular coordinates of infinity.  Furthermore, vertex links (which
    are not found during a quad space search) will not suddenly
    appear in the list.
   </para>
   <sect3 id="surfaces-coords-props">
    <title>Properties of surfaces</title>
    <para>
     In the very leftmost column of this table, the individual surfaces
     are numbered from 0 to <replaceable>S</replaceable>-1, where
     <replaceable>S</replaceable> is the total number of surfaces in the list.
    </para>
    <para>
     The next few columns describe several different properties of the
     surfaces, as described below.  Note that not all of these properties
     appear in all situations (for instance, &regina; does not yet calculate
     Euler characteristic for non-compact surfaces, and the orientability
     column will not be shown for lists that might include
     immersed or singular surfaces).
    </para>
    <para>
     <glosslist>
      <glossentry id="surfaces-propname">
       <glossterm><guilabel>Name</guilabel></glossterm>
       <glossdef>
        <para>
         Individual surfaces can be optionally named by the user
         to help keep track of which surface is which.
         Surface names are not used by &regina;, and do not need to be unique.
        </para>
        <para>
         To rename a surface, just click on the corresponding table cell
         and type the new name directly into that table cell.
        </para>
       </glossdef>
      </glossentry>
      <glossentry id="surfaces-propeuler">
       <glossterm><guilabel>Euler</guilabel></glossterm>
       <glossdef><para>
        This column shows the Euler characteristic of each surface.
       </para></glossdef>
      </glossentry>
      <glossentry id="surfaces-proporient">
       <glossterm><guilabel>Orient</guilabel></glossterm>
       <glossdef><para>
        This column contains a tick (&#x2713;) if the surface is
        orientable, or the text <guilabel>Non-or.</guilabel> if it is not.
       </para></glossdef>
      </glossentry>
      <glossentry id="surfaces-propsides">
       <glossterm><guilabel>Sides</guilabel></glossterm>
       <glossdef><para>
        This column shows whether each surface is one-sided or two-sided.
       </para></glossdef>
      </glossentry>
      <glossentry id="surfaces-boundary">
       <glossterm><guilabel>Bdry</guilabel></glossterm>
       <glossdef><para>
        This column describes whether each surface is bounded.
        It will take one of the following values:
        <glosslist>
         <glossentry>
          <glossterm><guilabel>&mdash;</guilabel></glossterm>
          <glossdef><para>
           Indicates that the surface is compact (contains finitely many discs)
           and closed (does not have any boundary).
          </para></glossdef>
         </glossentry>
         <glossentry>
          <glossterm><guilabel>Real</guilabel></glossterm>
          <glossdef><para>
           Indicates that the surface is compact (contains finitely many discs)
           and bounded (meets the boundary of the enclosing triangulation).
          </para></glossdef>
         </glossentry>
         <glossentry>
          <glossterm><guilabel>Spun</guilabel></glossterm>
          <glossdef><para>
           Indicates that the surface is non-compact, i.e., contains infinitely
           many normal or almost normal discs.
           Spun normal surface can occur in quadrilateral and
           quadrilateral-octagon coordinates.
          </para></glossdef>
         </glossentry>
        </glosslist>
       </para></glossdef>
      </glossentry>
      <glossentry id="surfaces-proplink">
       <glossterm><guilabel>Link</guilabel></glossterm>
       <glossdef><para>
        If a normal surface or a rational multiple of that surface
        is recognised as being a link of any interesting subcomplexes
        within the triangulation, these subcomplexes will be listed here.
        The following links are currently recognised:
        <glosslist>
         <glossentry>
          <glossterm><guilabel>Vertex</guilabel></glossterm>
          <glossdef><para>
           Indicates that the surface is a vertex link.
           The corresponding vertex number in the triangulation will be
           listed.
          </para>
          <para>
           Vertex numbers and the tetrahedron vertices to which they
           correspond can be seen in the skeleton section of the
           <link linkend="tri-vertices">triangulation viewer</link>.
          </para></glossdef>
         </glossentry>
         <glossentry>
          <glossterm><guilabel>Thin Edge</guilabel></glossterm>
          <glossdef><para>
           Indicates that the surface is a thin edge link.
           The corresponding edge number(s) in the triangulation will be
           listed.  Note that a surface might be both the link of one thin
           edge and also (independently) the link of another thin edge.
          </para>
          <para>
           Edge numbers and the tetrahedron edges/vertices to which they
           correspond can be seen in the skeleton section of the
           <link linkend="tri-edges">triangulation viewer</link>.
          </para></glossdef>
         </glossentry>
        </glosslist>
       </para></glossdef>
      </glossentry>
      <glossentry>
       <glossterm><guilabel>Type</guilabel></glossterm>
       <glossdef><para>
        If a normal surface is recognised as playing a particular role
        within the triangulation, that role will be listed in this column.
        At most one such role will be displayed for any particular surface.
        The following roles are currently recognised:
        <glosslist>
         <glossentry id="surfaces-propsplitting">
          <glossterm><guilabel>Splitting</guilabel></glossterm>
          <glossdef><para>
           Indicates that the surface is a splitting surface (contains
           precisely one quadrilateral per tetrahedron and no other normal
           or almost normal discs).
          </para></glossdef>
         </glossentry>
         <glossentry id="surfaces-propcentral">
          <glossterm><guilabel>Central</guilabel></glossterm>
          <glossdef><para>
           Indicates that although it is not a splitting surface,
           the surface is still a central surface (contains at most one
           normal or almost normal disc per tetrahedron).  A number will
           be displayed indicating the number of tetrahedra
           that this surface meets (i.e., the number of normal or almost
           normal discs in the surface).
          </para></glossdef>
         </glossentry>
        </glosslist>
       </para></glossdef>
      </glossentry>
      <glossentry id="surfaces-propoctagon">
       <glossterm><guilabel>Octagon</guilabel></glossterm>
       <glossdef>
        <para>
         This column only appears when dealing with almost normal surfaces.
         Its purpose is to indicate how many octagonal discs each surface
         contains, and where they are.
        </para>
        <para>
         For a given surface, if the cell in this column is empty then
         the surface does not contain any octagonal discs at all (i.e., it is a
         regular <emphasis>normal</emphasis> surface).
         Otherwise, it will contain a single coordinate label
         and the corresponding number of octagons,
         such as <literal>K2:&nbsp;03/12 (3&nbsp;octs)</literal>.
        </para>
        <para>
         Note that there can only ever be one coordinate
         <emphasis>position</emphasis> in any given surface
         containing octagonal discs (this is a constraint forced upon the
         enumeration procedure).  However, as of &regina;&nbsp;4.6,
         this coordinate position may contain more than one octagon.
         See the discussion on <link linkend="surfaces-deflegacyan">legacy
         almost normal coordinates</link> for further details.
        </para>
       </glossdef>
      </glossentry>
     </glosslist>
    </para>
   </sect3>
   <sect3 id="surfaces-coords-coords">
    <title>Coordinates and Coordinate Systems</title>
    <para>
     The meanings of the individual coordinate columns in the table
     depend upon the underlying coordinate system as follows.
     <glosslist>
      <glossentry id="surfaces-defstandard">
       <glossterm>Standard normal (tri-quad) coordinates</glossterm>
       <glossdef>
        <para>
         Standard normal coordinates simply count the number of triangular
         and quadrilateral discs of each type in each tetrahedron.
        </para>
        <para>
         Triangular coordinates are labelled
         <literal>0:0</literal>, <literal>0:1</literal>,
         <literal>0:2</literal>, <literal>0:3</literal>,
         <literal>1:0</literal>, <literal>1:1</literal>,
         <literal>1:2</literal>, <literal>1:3</literal>,
         <literal>2:0</literal>, etc.  Coordinate
         <literal><replaceable>t</replaceable>:<replaceable>v</replaceable></literal>
         represents the number of triangular discs in tetrahedron
         <replaceable>t</replaceable> that separate vertex
         <replaceable>v</replaceable> of that tetrahedron from the other
         three tetrahedron vertices
         (<replaceable>v</replaceable> will always be 0, 1, 2 or 3).
        </para>
        <para>
         Quadrilateral coordinates are labelled
         <literal>0:01/23</literal>, <literal>0:02/13</literal>,
         <literal>0:03/12</literal>, <literal>1:01/23</literal>,
         <literal>1:02/13</literal>, <literal>1:03/12</literal>,
         <literal>2:01/23</literal>, etc.  Coordinate
         <literal><replaceable>t</replaceable>:<replaceable>ab</replaceable>/<replaceable>cd</replaceable></literal>
         represents the number of quadrilateral discs in tetrahedron
         <replaceable>t</replaceable> that separate vertices
         <replaceable>a</replaceable> and <replaceable>b</replaceable>
         of that tetrahedron from vertices
         <replaceable>c</replaceable> and <replaceable>d</replaceable>
         of that tetrahedron
         (<replaceable>a</replaceable>, <replaceable>b</replaceable>,
         <replaceable>c</replaceable> and <replaceable>d</replaceable>
         will always be 0, 1, 2 and 3 in some order).
        </para>
       </glossdef>
      </glossentry>
      <glossentry id="surfaces-defquad">
       <glossterm>Quad normal coordinates</glossterm>
       <glossdef>
        <para>
         Quad normal coordinates are identical to standard normal
         (tri-quad) coordinates except that only quadrilateral discs are
         considered.
         See Tollefson <xref linkend="bib-quadspace"/> for details.
        </para>
       </glossdef>
      </glossentry>
      <glossentry id="surfaces-defstandardan">
       <glossterm>Standard almost normal (tri-quad-oct) coordinates</glossterm>
       <glossdef>
        <para>
         Standard almost normal coordinates are identical to standard
         normal coordinates except that octagonal discs are also
         considered.
        </para>
        <para>
         Octagonal discs are labelled similarly to quadrilateral discs
         (each octagonal disc also separates some two vertices of the
         corresponding tetrahedron from the other two).  To make it clear
         which coordinates are which, each triangle label begins with a
         <literal>T</literal>, each quadrilateral label begins with
         a <literal>Q</literal> and each octagon label begins
         with a <literal>K</literal>.
        </para>
        <para>
         Although an almost normal surface is defined to have precisely
         one octagonal disc, surfaces here in standard almost normal coordinates
         are allowed to have no octagons at all, or several octagons
         (though at most one octagon <emphasis>type</emphasis> can be used).
         This becomes important if you wish to use vertex almost normal
         surfaces as a basis for generating <emphasis>all</emphasis>
         almost normal surfaces.
        </para>
        <para>
         In contrast, see <link linkend="surfaces-deflegacyan">legacy
         almost normal coordinates</link> below, where surfaces with more
         than one octagon are explicitly removed.
        </para>
       </glossdef>
      </glossentry>
      <glossentry id="surfaces-defquadoct">
       <glossterm>Quad-oct almost normal coordinates</glossterm>
       <glossdef>
        <para>
         Quad-oct almost normal coordinates are identical to standard
         almost normal (tri-quad-oct) coordinates, except that only
         quadrilateral and octagonal discs are considered.
         See <xref linkend="bib-burton-quadoct"/> for details.
        </para>
        <para>
         Like standard almost normal coordinates, surfaces with no
         octagons or many octagons (but all of the same type) are allowed.
        </para>
       </glossdef>
      </glossentry>
      <glossentry id="surfaces-deflegacyan">
       <glossterm>Legacy almost normal (pruned tri-quad-oct)
        coordinates</glossterm>
       <glossdef>
        <para>
         These are identical to standard almost normal (tri-quad-oct)
         coordinates, except that surfaces with more than one octagon
         are removed entirely from the list.
        </para>
        <para>
         This was in fact the behaviour in &regina; versions 4.5.1 and
         earlier.  This behaviour was changed in &regina;&nbsp;4.6 because
         it is important to keep surfaces with multiple octagons if you wish
         to generate new surfaces as convex combinations of old surfaces.
        </para>
        <para>
         Unfortunately, if a surface list was created in &regina;&nbsp;4.5.1
         or earlier then such surfaces will already have been removed, and
         there is no way to get them back (except to run a new enumeration of
         almost normal surfaces).  Such lists will always be displayed
         with the label <emphasis>legacy almost normal coordinates</emphasis>
         so it is clear what has happened.
        </para>
        <para>
         You cannot create a <emphasis>new</emphasis> normal
         surface list in legacy coordinates.
        </para>
       </glossdef>
      </glossentry>
      <glossentry id="surfaces-defedgewt">
       <glossterm>Edge weight coordinates</glossterm>
       <glossdef>
        <para>
         The coordinates are labelled <literal>0</literal>,
         <literal>1</literal>, <literal>2</literal>, etc.  Coordinate
         <replaceable>e</replaceable> represents the number of times the
         surface crosses edge <replaceable>e</replaceable> of the
         triangulation.
        </para>
        <para>
         Edge numbers and the tetrahedron edges/vertices to which they
         correspond can be seen in the skeleton section of the
         <link linkend="tri-edges">triangulation viewer</link>.
        </para>
        <para>
         Edge weight coordinates are simply offered as a different way of
         viewing an existing list of normal surfaces.  You cannot
         <emphasis>enumerate</emphasis> a new list of surfaces
         in edge weight coordinates.
        </para>
       </glossdef>
      </glossentry>
      <glossentry id="surfaces-deffacearc">
       <glossterm>Face arc coordinates</glossterm>
       <glossdef>
        <para>
         The coordinates are labelled
         <literal>0:0</literal>, <literal>0:1</literal>, <literal>0:2</literal>,
         <literal>1:0</literal>, <literal>1:1</literal>, <literal>1:2</literal>,
         <literal>2:0</literal>, etc.  Coordinate
         <literal><replaceable>f</replaceable>:<replaceable>v</replaceable></literal>
         represents the number of times the surface slices through face
         <replaceable>f</replaceable> of the triangulation in an arc
         that truncates vertex <replaceable>v</replaceable> of that face
         (<replaceable>v</replaceable> will always be 0, 1 or 2).
        </para>
        <para>
         Face numbers and the tetrahedron faces/vertices to which they
         correspond can be seen in the skeleton section of the
         <link linkend="tri-faces">triangulation viewer</link>.
        </para>
        <para>
         Like edge weight coordinates, face arc coordinates are offered as a
         different way of viewing an existing normal surface list.  You cannot
         <emphasis>enumerate</emphasis> a new list of surfaces
         in face arc coordinates.
        </para>
       </glossdef>
      </glossentry>
     </glosslist>
    </para>
   </sect3>
  </sect2>

  <sect2 id="surfaces-viewmatching">
   <title>Original Matching Equations</title>

   <para>
    The <guilabel>Matching Equations</guilabel> tab in the surface list
    viewer contains a table of the individual matching equations that
    were used to form this list.
   </para>
   <para>
    The matching equations are presented in the coordinate system that
    was used to originally create this surface list (see the
    <link linkend="surfaces-creation">surface list creation reference</link>).
    This coordinate system is displayed above all of the tabs in the
    surface list viewer.
   </para>
   <para>
    Each row of this table represents an individual matching equation.
    A matching equation involves setting a linear combination of surface
    coordinates to zero; the coefficients of this linear combination are
    shown in the individual table cells.  A description of what the individual
    surface coordinates mean can be found in the
    <link linkend="surfaces-coords-coords">individual surface
    coordinates</link> section above.
   </para>
  </sect2>

  <sect2 id="surfaces-compat">
   <title>Compatibility Between Surfaces</title>

   <para>
    The <guilabel>Compatibility</guilabel> tab in the surface list
    viewer shows which pairs of surfaces are compatible with each other,
    both locally and globally.  These concepts are defined as follows:
   </para>
   <para>
    <glosslist>
     <glossentry id="surfaces-localcompat">
      <glossterm>Locally compatible</glossterm>
      <glossdef>
       <para>
        Two surfaces are <emphasis>locally compatible</emphasis> if
        they are able to avoid intersection in any given tetrahedron of
        the triangulation (though not necessarily in all tetrahedra
        simultaneously).
       </para>
       <para>
        In other words, two surfaces are locally compatible if, in each
        tetrahedron, they <emphasis>together</emphasis> use at most
        one quadrilateral or octagonal disc type.
       </para>
      </glossdef>
     </glossentry>
     <glossentry id="surfaces-globalcompat">
      <glossterm>Globally compatible</glossterm>
      <glossdef>
       <para>
        Two surfaces are <emphasis>globally compatible</emphasis> if
        they are able to avoid intersection in <emphasis>all</emphasis>
        tetrahedra of the triangulation simultaneously.
       </para>
       <para>
        In other words, two surfaces are globally compatible if they can
        be made <emphasis>disjoint</emphasis> within the triangulation.
       </para>
      </glossdef>
     </glossentry>
    </glosslist>
   </para>
   <para>
    The <guilabel>Compatibility</guilabel> tab contains two matrices, one for
    local compatibility and one for global compatibility.  You can
    switch between these two matrices by using the drop-down box labelled
    <guilabel>Display matrix</guilabel>.
   </para>
   <para>
    Each matrix has dimensions
    <replaceable>S</replaceable>-by-<replaceable>S</replaceable>,
    where <replaceable>S</replaceable> is the total number of surfaces
    in the list.  Rows and columns are both numbered from 0 to
    <replaceable>S</replaceable>-1 inclusive, and the
    (<replaceable>x</replaceable>,<replaceable>y</replaceable>) cell of
    the matrix is filled if and only if surfaces
    <replaceable>x</replaceable> and <replaceable>y</replaceable> are
    compatible.  Here we use same numbering scheme as in the first column of
    the <link linkend="surfaces-coords">coordinate viewer</link>.
   </para>
   <para>
    <screenshot>
     <screeninfo>The global compatibility matrix for a normal
      surface list</screeninfo>
     <mediaobject>
      <imageobject>
       <imagedata fileref="surfaces-compat.png"/>
      </imageobject>
      <textobject>
       <phrase>The global compatibility matrix for a
        normal surface list</phrase>
      </textobject>
      <caption><para>The global compatibility matrix for a
       normal surface list</para></caption>
     </mediaobject>
    </screenshot>
   </para>
   <para>
    Note that the global compatibility test comes with some constraints.
    Specifically, it cannot be run with surfaces that are empty, disconnected
    or non-compact (such as spun normal surfaces).  For any such surfaces,
    the corresponding rows and columns will be hashed out in the matrix
    as illustrated below.
   </para>
   <para>
    <screenshot>
     <screeninfo>Hashing out rows and columns for
      spun normal surfaces</screeninfo>
     <mediaobject>
      <imageobject>
       <imagedata fileref="surfaces-compat-hash.png"/>
      </imageobject>
      <textobject>
       <phrase>Hashing out rows and columns for
        spun normal surfaces</phrase>
      </textobject>
      <caption><para>Hashing out rows and columns for
       spun normal surfaces</para></caption>
     </mediaobject>
    </screenshot>
   </para>
   <para>
    For very large lists of surfaces, the compatibility matrices will
    not be generated automatically (since this could take a long time
    and/or require a significant amount of memory).  In this case, you
    can still compute the matrices by pressing the
    <guilabel>Calculate</guilabel> button at the top of the tab.
    The default threshold for automatic calculation is 100 surfaces,
    though you can change this in the
    <link linkend="options-surfaces">normal surface preferences</link>.
   </para>
  </sect2>

  <sect2>
   <title>Crushing and Cutting</title>

   <para>
    You can cut along a normal surface, or crush it using the techniques
    of Jaco and Rubinstein <xref linkend="bib-0-efficiency"/>.
    See the <link linkend="tri-cutcrush">chapter on triangulations</link>
    for details.
   </para>
  </sect2>
 </sect1>

 <sect1 id="surfaces-filtering">
  <title>Using Filters</title>

  <para>
   Sometimes you are faced with a very long list of surfaces from which
   you wish to extract just the tori, or just the discs, or some other
   subset of surfaces described by one or more simple constraints.
   For tasks such as these, surface filters can be used.
  </para>
  <para>
   A surface filter essentially represents some series of tests that can
   be performed upon a surface.  Tests can include a variety of easily
   calculable properties such as orientability and Euler characteristic.
   At its most basic level, a surface filter is a device that either
   accepts or rejects each surface that is passed through it.
  </para>
  <para>
   Each surface filter is stored as a separate packet in the packet tree.
   Details of the types of filter that can be created are discussed
   in the <link linkend="surfaces-filtering-creating">following
   section</link>.
  </para>
  <para>
   To restrict a normal surface list according to some filter, open the
   surface list <link linkend="surfaces-coords">coordinate
   viewer</link> where the entire list of surfaces is displayed.
   Above the table of coordinates is a drop-down box filled with the
   available filters.  If a filter is selected from this
   box then the surface list is restricted to include only those
   surfaces that the selected filter accepts.  To remove the filter, select
   the <guilabel>None</guilabel> option from this same drop-down box.
  </para>

  <sect2 id="surfaces-filtering-creating">
   <title>Creating Filters</title>

   <para>
    Filters are created through the
    <menuchoice>
     <guimenu>Packet Tree</guimenu>
     <guimenuitem>New Filter</guimenuitem>
    </menuchoice>
    menu item (or the corresponding toolbar button).  The following types
    of filter are available.
   </para>

   <sect3 id="surfaces-filterprop">
    <title>Filter by Properties</title>

    <para>
     A property-based filter allows surfaces to be restricted according
     to a variety of easily calculable properties.
    </para>
    <para>
     To be accepted a surface must satisfy all of the restrictions listed
     in the filter.  For instance, if a filter restricts by
     orientability (allow orientable surfaces only), by compactness
     (allow compact surfaces only) and also
     by Euler characteristic (allow Euler characteristic 1 only), then
     the filter will accept normal discs and nothing else.
    </para>
    <para>
     The properties by which surfaces can be restricted are as follows.
     <variablelist>
      <varlistentry>
       <term>Orientability</term>
       <listitem><para>
        This restriction can be used to only allow orientable surfaces
        or only allow non-orientable surfaces.
       </para></listitem>
      </varlistentry>
      <varlistentry>
       <term>Compactness</term>
       <listitem><para>
        This restriction can be used to only allow compact surfaces
        (i.e., surfaces with finitely many discs) or only allow
        non-compact surfaces (e.g., spun normal surfaces).
       </para></listitem>
      </varlistentry>
      <varlistentry>
       <term>Boundary</term>
       <listitem><para>
        This restriction can be used to only allow surfaces with real
        boundary edges or only allow surfaces with no real boundary edges.
        Note that spun normal surfaces, though they are not closed, do
        not have real boundary edges.
       </para></listitem>
      </varlistentry>
      <varlistentry>
       <term>Euler Characteristic</term>
       <listitem><para>
        This restriction can be used to only allow surfaces whose Euler
        characteristic belongs to a given list.
       </para></listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect3>

   <sect3 id="surfaces-filtercomb">
    <title>Combination Filter</title>

    <para>
     A combination filter is a high-level filter that combines some
     other group of filters using boolean <literal>AND</literal> or
     <literal>OR</literal>.  The combination filter will combine all
     packet filters found directly beneath it in the packet tree.
    </para>
    <para>
     For instance, to create a filter that accepts either discs or tori,
     you can create a <link linkend="surfaces-filterprop">property
     filter</link> for discs and another property filter for tori.
     These are both placed within the packet tree directly beneath
     a boolean <literal>OR</literal> combination filter, as
     illustrated in the following screenshot.
    </para>
    <screenshot>
     <screeninfo>A sample combination filter</screeninfo>
     <mediaobject>
      <imageobject>
       <imagedata fileref="filtercombeg.png"/>
      </imageobject>
      <textobject>
       <phrase>A sample combination filter</phrase>
      </textobject>
      <caption><para>A sample combination filter</para></caption>
     </mediaobject>
    </screenshot>
    <para>
     <inlinemediaobject>
      <imageobject>
       <imagedata fileref="filtercombtree.png" align="right"/>
      </imageobject>
     </inlinemediaobject>
     Note that a combination filter will only combine its immediate children.
     Suppose for instance that a combination filter
     <replaceable>C</replaceable> has child filters
     <replaceable>P</replaceable> and <replaceable>Q</replaceable>,
     and that <replaceable>Q</replaceable> in turn has child filters
     <replaceable>X</replaceable> and <replaceable>Y</replaceable>,
     as illustrated in the diagram to the right.
     Then <replaceable>C</replaceable> forms a boolean combination of
     <replaceable>P</replaceable> and <replaceable>Q</replaceable> only.
    </para>
   </sect3>
  </sect2>
 </sect1>
</chapter>
