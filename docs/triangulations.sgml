
<!-- Regina triangulation documentation.
     See regina.sgml for further details. -->

<chapter id="triangulations">
 <title>Working with Triangulations</title>

 <para>
  Most 3-manifolds in &regina; are represented by
  <firstterm>triangulations</firstterm>.  A triangulation is a
  particular representation of particular 3-manifold, consisting of a
  set of tetrahedra and instructions on how (some of) the faces of these
  tetrahedra are to be glued together in pairs.
 </para>

 <sect1 id="tri-creation">
  <title>Creation</title>

  <sect2 id="tri-new">
   <title>New Triangulations</title>
   <para>
    The simplest way to create a triangulation is through the
    <menuchoice>
     <guimenu>Packet</guimenu>
     <guisubmenu>New</guisubmenu>
     <guimenuitem>Triangulation</guimenuitem>
    </menuchoice>
    menu item, which will create a new triangulation from scratch.  At
    this point, several choices are offered as described below.
   </para>

   <sect3 id="tri-new-empty">
    <title>Empty</title>

    <para>
     This will create a new triangulation with no tetrahedra at all.
     This option is best if you have a triangulation you wish to enter
     in by hand, in which case you can create a new empty triangulation
     and then manually <link linkend="tri-editgluings">add tetrahedra
     and edit face gluings</link>.
    </para>
   </sect3>

   <sect3 id="tri-new-layered">
    <title>Layered Solid Torus</title>

    <para>
     This will create a new layered solid torus with parameters
     (<replaceable>a</replaceable>, <replaceable>b</replaceable>,
     <replaceable>c</replaceable>) where all three parameters are
     non-negative, coprime and
     <replaceable>a</replaceable>+<replaceable>b</replaceable>=<replaceable>c</replaceable>.
     These three parameters must be provided before the triangulation
     can be created.
    </para>
    <para>
     A <firstterm>layered solid torus</firstterm> is a solid torus built
     by taking a one-tetrahedron solid torus and repeatedly adding
     layers.  A new layer is added by taking a new tetrahedron and
     gluing two of its faces as a square onto the existing torus
     boundary; the remaining two faces of the new tetrahedron then form
     the new torus boundary.  Note that each new layer can be added in
     three different ways (corresponding to the three different two-face
     squares that can be chosen on the torus boundary).  The
     parameters of the layered solid torus represent the ways in which
     the different layers have been added.
    </para>
   </sect3>

   <sect3 id="tri-new-lens">
    <title>Lens Space</title>

    <para>
     This will create a layered lens space with parameters
     (<replaceable>p</replaceable>, <replaceable>q</replaceable>)
     where both parameters are positive, coprime and
     <replaceable>p</replaceable>&gt;<replaceable>q</replaceable>.
     These two parameters must be provided before the triangulation
     can be created.
    </para>
    <para>
     A <firstterm>layered lens space</firstterm> is a lens space built
     by taking two layered solid tori with appropriate parameters and
     gluing them together along their torus boundaries.
    </para>
   </sect3>

   <sect3 id="tri-new-dehydration">
    <title>Dehydration</title>

    <para>
     This will create the triangulation obtained by rehydrating the
     given dehydration string.
    </para>
    <para>
     A <firstterm>dehydration string</firstterm> is a set of letters such as
     <literal>dadbcccaqhx</literal> containing enough information to
     recreate the triangulation.  Dehydration strings appear in
     census papers such as the
     <link linkend="bib-cuspedcensus">hyperbolic cusped census</link>,
     in which the dehydration format is explicitly described.
    </para>
   </sect3>
  </sect2>

  <sect2 id="tri-imported">
   <title>Imported Triangulations</title>

   <para>
    Triangulations can also be imported into &regina; from a variety of
    foreign file formats.  Importing is done through the
    <menuchoice>
     <guimenu>File</guimenu>
     <guisubmenu>Import</guisubmenu>
    </menuchoice>
    menu; the individual file formats are described below.
   </para>

   <sect3 id="tri-import-regina">
    <title>&regina; Data File</title>

    <para>
     The contents of a native &regina; data file can be imported.  In
     this case, the packet tree from the imported file will be
     inserted into the packet tree of the current working file.
    </para>
   </sect3>

   <sect3 id="tri-import-snappea">
    <title>&snappea; Triangulation</title>

    <para>
     A triangulation obtained from &snappea; can be imported.
     The file should be a text file in &snappea;'s triangulation format;
     an example is shown below.
    </para>
    <programlisting>
    % Triangulation
    m002
    geometric_solution  2.02988321
    nonorientable_manifold
    CS_unknown

    0 2
        Klein   0.000000000000   0.000000000000
        Klein   0.000000000000   0.000000000000

    2
       1    1    1    1
     0132 3120 2130 3102
       0    1    0    0
      0  0  0  0  0  0  1 -1  0  0  0  0  1 -1  0  0
      0  1 -1  0  0  0  0  0 -1  0  0  1  0  0  0  0
      0  0  1 -1 -1  0  1  0  1  0  0 -1 -1  1  0  0
      0  0  1 -1 -1  0  1  0  1  0  0 -1 -1  1  0  0
      0.500000000000   0.866025403784

       0    0    0    0
     0132 3120 2130 3102
       0    1    0    0
      0  1 -1  0  0  0  0  0 -1  0  0  1  0  0  0  0
      0  0  0  0  0  0  1 -1  0  0  0  0  1 -1  0  0
      0 -1  1  0  1  0  0 -1  1  0  0 -1 -1  0  1  0
      0 -1  1  0  1  0  0 -1  1  0  0 -1 -1  0  1  0
      0.500000000000   0.866025403784
    </programlisting>
   </sect3>

   <sect3 id="tri-import-dehydrationlist">
    <title>Dehydrated Triangulation List</title>

    <para>
     A list of <link linkend="tri-new-dehydration">dehydrated
     triangulation strings</link> can be imported.
     The list should be stored in a text file with one triangulation per
     line.  Each line may contain an arbitrary amount of data, but the
     first word of each line should be the dehydrated triangulation
     string.  A sample file is shown below.
    </para>
    <programlisting>
    dafbcccaadl   N3,1   Z/3 + Z
    dadcbccdjkd   N3,2   Z
    dadbcccbbcv   N3,3   Z
    dadbcccccdm   N3,4   Z
    dadbcccaqhx   N3,5   Z/2 + Z/2 + Z
    </programlisting>
   </sect3>
  </sect2>
 </sect1>

 <sect1 id="tri-analysis">
  <title>Analysis</title>

  <para>
   A variety of triangulation properties are available for calculation;
   most of these can be viewed by clicking on the different tabs
   available in the triangulation viewer.
  </para>

  <sect2 id="tri-basicprops">
   <title>Basic Properties</title>

   <para>
    Above all of the tabs in the triangulation viewer are displayed some
    basic properties of the triangulation as listed below.
   </para>
   <para>
    <glosslist>
     <glossentry>
      <glossterm>Empty</glossterm>
      <glossdef><para>
       Signifies that the triangulation contains no tetrahedra at all.
      </para></glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Invalid</glossterm>
      <glossdef><para>
       Signifies that the triangulation contains an invalid vertex
       (a vertex whose link has boundary but is not a disc) or an
       invalid edge (an edge glued to itself in reverse).
      </para></glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Closed</glossterm>
      <glossdef><para>
       Signifies that the triangulation has no boundary faces and no
       ideal vertices.  All vertex links must be 2-spheres.
      </para></glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Ideal</glossterm>
      <glossdef><para>
       Signifies that the triangulation contains an ideal vertex (a
       vertex whose link is closed but not a 2-sphere).
      </para></glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Real Bdry</glossterm>
      <glossdef><para>
       Signifies that the triangulation contains a boundary face.
      </para></glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Orientable / Non-orientable</glossterm>
      <glossdef><para>
       Shows whether the triangulation is orientable.
      </para></glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Connected / Disconnected</glossterm>
      <glossdef><para>
       Shows whether the triangulation forms a single connected piece.
      </para></glossdef>
     </glossentry>
    </glosslist>
   </para>
  </sect2>

  <sect2 id="tri-viewgluings">
   <title>Face Gluings</title>

   <para>
    The <guilabel>Gluings</guilabel> tab in the triangulation
    viewer shows how individual faces of individual
    tetrahedra are glued to each other.  See the reference for
    <link linkend="tri-editgluings">editing face gluings</link> for
    details on how this information is presented.
   </para>
  </sect2>

  <sect2 id="tri-skeleton">
   <title>Skeletal Information</title>

   <para>
    The <guilabel>Skeleton</guilabel> tab in the triangulation viewer
    offers details of the individual vertices, edges, faces, components
    and boundary components that make up the triangulation.
   </para>
   <para>TODO: This section still to be written.</para>
  </sect2>

  <sect2 id="tri-algebra">
   <title>Algebraic Properties</title>

   <para>
    The <guilabel>Algebra</guilabel> tab in the triangulation viewer
    presents a variety of algebraic invariants of the triangulation.
   </para>
   <para>
    Note that if the triangulation contains ideal vertices, the
    algebraic properties will be calculated as if these vertices had
    been truncated.  These truncated ideal vertices will also be
    considered part of the boundary.
   </para>
   <warning><para>
    There is no guarantee that invalid edges (edges
    glued to themselves in reverse) will be dealt with correctly.
    In particular, the projective plane cusps they produce will be
    ignored.
   </para></warning>
   <para>
    On the left hand side of the algebra panel, different homology
    groups will be presented.  These include
    H1(M) (the first homology group),
    H1(M, Bdry M)
    (the relative first homology group with respect to the boundary),
    H1(Bdry M) (the first homology group of the boundary),
    H2(M) (the second homology group) and
    H2(M ; Z<subscript>2</subscript>)
    (the second homology group with coefficients in
    Z<subscript>2</subscript>).
   </para>
   <para>
    On the right hand side of the algebra panel, the fundamental group
    will be presented as a set of generators and
    relations.  The generators and relations will be passed through a
    fairly weak recognition routine, and if the group is recognised then
    its common name will be given as well.
   </para>
  </sect2>

  <sect2 id="tri-composition">
   <title>Combinatorial Composition</title>
   <para>TODO: This section still to be written.</para>
  </sect2>

  <sect2 id="tri-surfaceproperties">
   <title>Properties of Normal Surfaces</title>

   <para>
    Certain properties of a triangulation are defined by the types of
    normal surfaces it contains.  These properties can be found under
    the <guilabel>Surfaces</guilabel> tab in the triangulation viewer.
   </para>
   <para>
    For sufficiently large triangulations, some of these properties will
    not be calculated by default since the calculations could be quite
    slow.  If a property is listed as <literal>Unknown</literal>, press
    the corresponding <guibutton>Calculate</guibutton> button
    (and be prepared to wait).
   </para>
   <para>
    The available properties pertaining to normal surfaces are as follows.
   </para>
   <para>
    <glosslist>
     <glossentry>
      <glossterm>Zero-Efficient</glossterm>
      <glossdef><para>
       Determines whether the triangulation is 0-efficient.  A
       triangulation is <firstterm>0-efficient</firstterm> if its only
       normal spheres and discs are vertex linking, and if it has no 2-sphere
       boundary components.
      </para></glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Splitting Surface</glossterm>
      <glossdef><para>
       Determines whether the triangulation has a splitting
       surface.  A <firstterm>splitting surface</firstterm> is a compact
       normal surface consisting of precisely one quad per tetrahedron
       and no other normal (or almost normal) discs.
      </para></glossdef>
     </glossentry>
    </glosslist>
   </para>
  </sect2>
 </sect1>

 <sect1 id="tri-modification">
  <title>Modification</title>

  <sect2 id="tri-editgluings">
   <title>Editing Face Gluings</title>

   <para>
    When viewing a triangulation, the <guilabel>Gluings</guilabel> tab
    allows the user to add or remove tetrahedra and manually edit the
    gluings between tetrahedron faces.
   </para>
   <para>
    Tetrahedra are numbered beginning at 0; thus if a triangulation has
    three tetrahedra they will be numbered 0, 1 and 2.  Tetrahedra can
    be added and removed using the <guilabel>Add</guilabel> and
    <guilabel>Remove</guilabel> buttons above the gluing editor.
   </para>
   <para>
    The gluing editor itself contains a grid of tetrahedron faces.  Each
    row represents a tetrahedron in the triangulation and each column
    represents one of the four tetrahedron faces.  Tetrahedron vertices
    are numbered 0, 1, 2 and 3, and each tetrahedron face is identified
    by the three vertices that it contains.
   </para>
   <para>
    Each cell of this grid identifies to what the corresponding face is
    glued.  To change how the face is glued, click on the cell and a
    dialog will appear allowing the gluing to be changed.
   </para>
   <para>
    If a cell contains the word <literal>Boundary</literal>, the
    corresponding face is a boundary face and is glued to nothing at
    all.  Otherwise it will contain a string like
    <literal>&gt; 5 (312)</literal>.  This means that the face for
    that cell is
    glued to face 312 of tetrahedron 5.  In particular, if the cell in
    question belongs to face 013 of tetrahedron 4, this means that
    vertices 0, 1 and 3 of tetrahedron 4 are glued to vertices 3, 1 and
    2 of tetrahedron 5 respectively.  Thus the cell contents describe
    the precise gluing permutation.
   </para>
   <para>
    Tetrahedra can be optionally named to help
    keep track of their roles within a triangulation.  To change the
    name of a tetrahedron, click on the row header for that tetrahedron (this
    is the cell on the left hand side of the grid containing the tetrahedron
    number).  The new name can be typed directly into the cell.
   </para>
  </sect2>

  <sect2 id="tri-elementarymove">
   <title>Elementary Moves</title>

   <para>
    The
    <menuchoice>
     <guimenu>Modify</guimenu>
     <guisubmenu>Triangulation</guisubmenu>
     <guimenuitem>Elementary Move</guimenuitem>
    </menuchoice>
    menu item will present a list of elementary moves that can be
    performed on the chosen triangulation.  Note that there are
    restrictions on when particular moves may be performed and as a
    result some elementary moves might not be available.
   </para>
   <para>
    An elementary move will never change the topology of the
    3-manifold.  The individual moves and their restrictions are
    described in full detail in the
    <ulink url="engine/classNTriangulation.html"><classname>NTriangulation</classname>
    class reference</ulink> in the calculation engine documentation, but a
    brief summary is provided below.
   </para>
   <para>
    <glosslist>
     <glossentry>
      <glossterm>3-2 Move</glossterm>
      <glossdef><para>
       A <firstterm>3-2 move</firstterm> about an edge of degree 3 involves
       replacing the three tetrahedra joined at that edge
       with two tetrahedra joined by a face.
      </para></glossdef>
     </glossentry>
     <glossentry>
      <glossterm>2-3 Move</glossterm>
      <glossdef><para>
       A <firstterm>2-3 move</firstterm> about a non-boundary face involves
       replacing the two tetrahedra joined at that face with three
       tetrahedra joined by an edge.
      </para></glossdef>
     </glossentry>
     <glossentry>
      <glossterm>4-4 Move</glossterm>
      <glossdef><para>
       A <firstterm>4-4 move</firstterm> about an edge of degree 4 involves
       replacing the four tetrahedra joined at that edge with four
       tetrahedra joined along a different edge in a different position.
      </para></glossdef>
     </glossentry>
     <glossentry>
      <glossterm>2-0 Move (Edge)</glossterm>
      <glossdef><para>
       A <firstterm>2-0 move</firstterm> about an edge of degree 2 involves
       taking the two tetrahedra joined at that edge and squashing them flat.
      </para></glossdef>
     </glossentry>
     <glossentry>
      <glossterm>2-0 Move (Vertex)</glossterm>
      <glossdef><para>
       A <firstterm>2-0 move</firstterm> about a vertex of degree 2 involves
       taking the two tetrahedra joined at that vertex and squashing them flat.
      </para></glossdef>
     </glossentry>
     <glossentry>
      <glossterm>2-1 Move</glossterm>
      <glossdef><para>
       A <firstterm>2-1 move</firstterm> about an edge of degree 1 involves
       merging the tetrahedron containing that edge with one of the
       tetrahedra joining it.
      </para></glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Open Book</glossterm>
      <glossdef><para>
       A <firstterm>book opening move</firstterm> on a face that touches
       the boundary involves ungluing that face to create two new boundary
       faces and thus exposing the tetrahedra inside to the boundary.
      </para></glossdef>
     </glossentry>
     <glossentry>
      <glossterm>Shell Boundary</glossterm>
      <glossdef><para>
       A <firstterm>boundary shelling move</firstterm> on a boundary
       tetrahedron involves simply removing that tetrahedron.
      </para></glossdef>
     </glossentry>
    </glosslist>
   </para>
  </sect2>

  <sect2 id="tri-subdivision">
   <title>Global Subdivision</title>

   <para>
    A few routines are available for performing standard
    subdivisions on triangulations.
   </para>
   <para>
    The
    <menuchoice>
     <guimenu>Modify</guimenu>
     <guisubmenu>Triangulation</guisubmenu>
     <guimenuitem>Barycentric Subdivision</guimenuitem>
    </menuchoice>
    menu item will perform a barycentric subdivision on the chosen
    triangulation.  A <firstterm>barycentric subdivision</firstterm>
    involves taking each tetrahedron, adding new vertices at the
    centroid of the tetrahedron, the centroid of each face and the
    midpoint of each edge and joining them with edges to split the
    tetrahedron into 24 smaller tetrahedra.
   </para>
   <para>
    The
    <menuchoice>
     <guimenu>Modify</guimenu>
     <guisubmenu>Triangulation</guisubmenu>
     <guimenuitem>Convert from Ideal to Finite</guimenuitem>
    </menuchoice>
    menu item will convert the chosen triangulation to a finite
    triangulation (one with no ideal vertices).  This is done by
    subdividing each tetrahedron and then truncating at the ideal
    vertices.  The resulting triangulation has each ideal or
    non-standard vertex
    converted to a real boundary component (one made from boundary faces
    of tetrahedra).
   </para>
  </sect2>

  <sect2 id="tri-simplification">
   <title>Global Simplification</title>

   <para>
    Currently only a fairly basic routine is available for simplifying a
    triangulation as far as possible without manual intervention.
    Selecting the
    <menuchoice>
     <guimenu>Modify</guimenu>
     <guisubmenu>Triangulation</guisubmenu>
     <guimenuitem>Basic Simplify</guimenuitem>
    </menuchoice>
    menu item will use <link linkend="tri-elementarymove">elementary
    moves</link> to reduce the triangulation to a local minimum number
    of tetrahedra.  In particular, it is not guaranteed to produce
    <emphasis>the</emphasis> minimum number of tetrahedra required.
   </para>
   <para>
    This simplification routine will
    <emphasis>not</emphasis> use intelligent techniques like trying random
    4-4 moves to get out of the local minimum.  It's on the &todo; list.
   </para>
  </sect2>

  <sect2 id="tri-cover">
   <title>Double Cover</title>

   <para>
    The
    <menuchoice>
     <guimenu>Modify</guimenu>
     <guisubmenu>Triangulation</guisubmenu>
     <guimenuitem>Double Cover</guimenuitem>
    </menuchoice>
    menu item will convert a triangulation to its double cover.  Each
    orientable component will be duplicated, and each non-orientable
    component will be converted to its orientable double cover.
   </para>
  </sect2>

  <sect2 id="tri-crush">
   <title>Crushing Normal Surfaces</title>

   <para>
    A triangulation can be modified by finding a normal surface within
    it and crushing that surface to a point.  Note that this action
    might change the topology of the 3-manifold, and in some cases might
    introduce ideal vertices or even invalid edges.  For details see
    <ulink url="engine/classNNormalSurface.html"><function><classname>NNormalSurface</classname>::crush()</function></ulink>
    in the calculation engine documentation.
   </para>
   <para>
    To crush a normal surface, bring up a list of normal surfaces such
    as can be found in a
    <link linkend="packet-surfacelist">normal surface list packet</link>
    or a <link linkend="packet-filter">surface filter packet</link>.
    Select the surface to crush and press the
    <guibutton>Crush</guibutton> button beside the list of surfaces.  A
    new triangulation will be created as a result of crushing the normal
    surface; the original triangulation will not be changed.
   </para>
  </sect2>
 </sect1>
</chapter>
