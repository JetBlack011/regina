
<!-- Regina command-line utilities documentation.
     See regina.sgml for further details. -->

<reference id="utils">
 <title>Command-Line Utilities</title>

 <partintro>
  <para>
   The usual &regina; startup script is documented in the earlier
   reference chapter on <link linkend="man-regina">startup options
   and configuration</link>.
  </para>
  <para>
   This reference chapter documents the other various command-line
   utilities that are provided with &regina;.
  </para>
 </partintro>

 <!-- File Concatenator -->

 <refentry id="man-regconcat">
  <refmeta>
   <refentrytitle>regconcat</refentrytitle>
   <manvolnum>1</manvolnum>
  </refmeta>

  <refnamediv>
   <refname>regconcat</refname>
   <refpurpose>Combine several &regina; data files</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
   <cmdsynopsis>
    <command>regconcat</command>
    <arg><option>-o</option> <replaceable>output-file</replaceable></arg>
    <arg rep=repeat choice=req><replaceable>input-file</replaceable></arg>
   </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
   <title>Description</title>
   <para>
    This utility combines several individual &regina; data files into
    a single larger data file.  The new file will have a container as its
    top-level packet, beneath which will be placed the packet trees from
    each of the supplied input files.
   </para>
   <para>
    If an output file is specified through option <option>-o</option>,
    the new file will be written as compressed &xml; to this output file.
    Otherwise the new file will be written as uncompressed &xml; to
    standard output.
   </para>
  </refsect1>

  <refsect1>
   <title>Options</title>
   <variablelist>
    <varlistentry>
     <term><option>-o</option> <replaceable>output-file</replaceable></term>
     <listitem>
      <para>
       Specifies that the new combined data file should be written
       as compressed &xml; to the given output file.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </refsect1>

  <refsect1>
   <title>See Also</title>
   <para>
    <link linkend="man-regina">regina</link>
     (<link linkend="man-regina">regina-normal</link> on some systems).
   </para>
  </refsect1>

  <refsect1>
   <title>Author</title>
   <para>
    &regina; was written by &regauthorplain; with help from others;
    see the documentation for full details.
    You can contact me at &regemail;.
   </para>
  </refsect1>
 </refentry>

 <!-- File Converter -->

 <refentry id="man-regconvert">
  <refmeta>
   <refentrytitle>regconvert</refentrytitle>
   <manvolnum>1</manvolnum>
  </refmeta>

  <refnamediv>
   <refname>regconvert</refname>
   <refpurpose>Convert between different &regina; file formats</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
   <cmdsynopsis>
    <command>regconvert</command>
    <group>
     <arg><option>-x</option></arg>
     <arg><option>-u</option></arg>
     <arg><option>-b</option></arg>
    </group>
    <arg choice=req><replaceable>old-file</replaceable></arg>
    <arg><replaceable>new-file</replaceable></arg>
   </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
   <title>Description</title>
   <para>
    Between &regina; versions 2.4 and 3.0, the data files changed from
    using an impenetrable and undocumented binary format to using
    (optionally compressed) &xml;.
   </para>
   <para>
    This utility simply converts back and forth between these different
    file formats.
   </para>
   <para>
    Argument <replaceable>old-file</replaceable> should be the file to
    read and convert; argument <replaceable>new-file</replaceable> should
    be the name of the new converted file to write.  These two filenames
    may be the same, in which case the old file will be replaced with the new.
   </para>
   <para>
    If argument <replaceable>new-file</replaceable> is missing, the new
    file will be written to standard output; this forces output to be
    uncompressed &xml; (see option <option>-u</option>).
   </para>
   <warning><para>
    When writing an old-style binary file, some information might be
    lost.  Specifically, only information that is understood by the
    &regina;&nbsp;2.4 calculation engine will be written.
   </para></warning>
  </refsect1>

  <refsect1>
   <title>Options</title>
   <variablelist>
    <varlistentry>
     <term><option>-x</option> (default)</term>
     <listitem>
      <para>Convert to compressed &xml;.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-u</option></term>
     <listitem>
      <para>Convert to plain (uncompressed) &xml;.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-b</option></term>
     <listitem>
      <para>Convert to the old-style binary format.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </refsect1>

  <refsect1>
   <title>See Also</title>
   <para>
    <link linkend="man-regfiletype">regfiletype</link>,
    <link linkend="man-regina">regina</link>
     (<link linkend="man-regina">regina-normal</link> on some systems).
   </para>
  </refsect1>

  <refsect1>
   <title>Author</title>
   <para>
    &regina; was written by &regauthorplain; with help from others;
    see the documentation for full details.
    You can contact me at &regemail;.
   </para>
  </refsect1>
 </refentry>

 <!-- File Dumper -->

 <refentry id="man-regfiledump">
  <refmeta>
   <refentrytitle>regfiledump</refentrytitle>
   <manvolnum>1</manvolnum>
  </refmeta>

  <refnamediv>
   <refname>regfiledump</refname>
   <refpurpose>Dump the contents of a &regina; data file</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
   <cmdsynopsis>
    <command>regfiledump</command>
    <group>
     <arg><option>-f</option></arg>
     <arg><option>-l</option></arg>
     <arg><option>-n</option></arg>
    </group>
    <arg><option>-c</option></arg>
    <arg choice=req><replaceable>file</replaceable></arg>
    <arg rep=repeat><replaceable>packet-label</replaceable></arg>
   </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
   <title>Description</title>
   <para>
    This utility dumps the contents of the given &regina; data file to
    standard output in a human-readable format.
   </para>
   <para>
    If a list of packet labels is given on the command-line, only those
    packets listed will be output.  Otherwise all packets in the given
    file will be output.
   </para>
  </refsect1>

  <refsect1>
   <title>Options</title>
   <variablelist>
    <varlistentry>
     <term><option>-f</option> (default)</term>
     <listitem>
      <para>
       Output full packet details.  Output for each packet will cover
       several lines, beginning with basic packet details (such as label
       and type) followed by the packet's long description.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-l</option></term>
     <listitem>
      <para>
       Output a list of packet labels and types only, one packet per line.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-n</option></term>
     <listitem>
      <para>
       Don't output any packets at all; this option forces a packet
       count (see option <option>-c</option>).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-c</option></term>
     <listitem>
      <para>Finish output with a count of all packets in the given file.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </refsect1>

  <refsect1>
   <title>See Also</title>
   <para>
    <link linkend="man-regina">regina</link>
     (<link linkend="man-regina">regina-normal</link> on some systems).
   </para>
  </refsect1>

  <refsect1>
   <title>Author</title>
   <para>
    &regina; was written by &regauthorplain; with help from others;
    see the documentation for full details.
    You can contact me at &regemail;.
   </para>
  </refsect1>
 </refentry>

 <!-- File Identifier -->

 <refentry id="man-regfiletype">
  <refmeta>
   <refentrytitle>regfiletype</refentrytitle>
   <manvolnum>1</manvolnum>
  </refmeta>

  <refnamediv>
   <refname>regfiletype</refname>
   <refpurpose>Identify the formats of &regina; data files</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
   <cmdsynopsis>
    <command>regfiletype</command>
    <arg choice=req rep=repeat><replaceable>file</replaceable></arg>
   </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
   <title>Description</title>
   <para>
    Between &regina; versions 2.4 and 3.0, the data files changed from
    using an impenetrable and undocumented binary format to using
    (optionally compressed) &xml;.
   </para>
   <para>
    This utility simply determines which of these formats a given
    &regina; data file is in.
   </para>
   <para>
    Multiple files may be given on the command-line; the details of each
    file format will be written to standard output.
   </para>
  </refsect1>

  <refsect1>
   <title>See Also</title>
   <para>
    <link linkend="man-regconvert">regconvert</link>,
    <link linkend="man-regina">regina</link>
     (<link linkend="man-regina">regina-normal</link> on some systems).
   </para>
  </refsect1>

  <refsect1>
   <title>Author</title>
   <para>
    &regina; was written by &regauthorplain; with help from others;
    see the documentation for full details.
    You can contact me at &regemail;.
   </para>
  </refsect1>
 </refentry>

 <!-- Signature Census -->

 <refentry id="man-sigcensus">
  <refmeta>
   <refentrytitle>sigcensus</refentrytitle>
   <manvolnum>1</manvolnum>
  </refmeta>

  <refnamediv>
   <refname>sigcensus</refname>
   <refpurpose>Form a census of splitting surface signatures</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
   <cmdsynopsis>
    <command>sigcensus</command>
    <arg choice=req><replaceable>order</replaceable></arg>
   </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
   <title>Description</title>
   <para>
    Forms a census of all splitting surface signatures of the given
    order (the <firstterm>order</firstterm> is the number of quads in
    the resulting splitting surface).
   </para>
   <para>
    The signatures will be written to standard output, one per
    line, followed by a count of the total number of signatures found.
   </para>
   <para>
    Each signature will be output precisely once up to equivalence.
    Signatures are considered equivalent if they are related by some
    combination of:
    <itemizedlist>
     <listitem>
      <para>relabelling symbols;</para>
     </listitem>
     <listitem>
      <para>rotating an individual cycle;</para>
     </listitem>
     <listitem>
      <para>inverting an individual cycle (i.e., reversing the cycle and
       changing the case of each symbol in the cycle);</para>
     </listitem>
     <listitem>
      <para>reversing all cycles without changing the case of any
       symbols.</para>
     </listitem>
    </itemizedlist>
   </para>
   <warning><para>
    Currently upper-case symbols in signatures are not supported; this
    program will only output signatures whose symbols are all lower-case.
    Hopefully this deficiency will be removed in future versions.
   </para></warning>
  </refsect1>

  <refsect1>
   <title>See Also</title>
   <para>
    <link linkend="man-tricensus">tricensus</link>,
    <link linkend="man-tricensus-manager">tricensus-manager</link>,
    <link linkend="man-regina">regina</link>
     (<link linkend="man-regina">regina-normal</link> on some systems).
   </para>
  </refsect1>

  <refsect1>
   <title>Author</title>
   <para>
    &regina; was written by &regauthorplain; with help from others;
    see the documentation for full details.
    You can contact me at &regemail;.
   </para>
  </refsect1>
 </refentry>

 <!-- Triangulation Census -->

 <refentry id="man-tricensus">
  <refmeta>
   <refentrytitle>tricensus</refentrytitle>
   <manvolnum>1</manvolnum>
  </refmeta>

  <refnamediv>
   <refname>tricensus</refname>
   <refpurpose>Form a census of 3-manifold triangulations</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
   <cmdsynopsis>
    <command>tricensus</command>
    <arg><option>-t, --tetrahedra=</option><replaceable>tetrahedra</replaceable></arg>
    <group>
     <arg><option>-b, --boundary</option></arg>
     <arg><option>-i, --internal</option></arg>
     <arg><option>-B, --bdryfaces=</option><replaceable>faces</replaceable></arg>
    </group>
    <group>
     <arg><option>-o, --orientable</option></arg>
     <arg><option>-n, --nonorientable</option></arg>
    </group>
    <group>
     <arg><option>-f, --finite</option></arg>
     <arg><option>-d, --ideal</option></arg>
    </group>
    <group>
     <arg><option>-m, --minimal</option></arg>
     <arg><option>-M, --minprime</option></arg>
    </group>
    <group>
     <arg><option>-p, --genpairs</option></arg>
     <arg><option>-P, --usepairs</option></arg>
    </group>
    <arg choice=req><replaceable>output-file</replaceable></arg>
   </cmdsynopsis>
   <cmdsynopsis>
    <command>tricensus</command>
    <arg choice=req><option>--help</option></arg>
   </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
   <title>Description</title>
   <para>
    Forms a census of all 3-manifold triangulations satisfying a
    particular set of conditions.
   </para>
   <para>
    The only condition that must be provided is the number of tetrahedra
    used to build the triangulations.  Additional constraints may be
    specified on the command-line as described below.
   </para>
   <para>
    Each triangulation will be output precisely once up to combinatorial
    isomorphism.  Invalid triangulations (triangulations with edges
    identified to themselves in reverse or boundary vertices whose links
    are not discs) will not be output at all.
   </para>
   <para>
    As the census progresses, the state of progress will be written (slowly)
    to standard output.  Once the census is complete, the census itself will
    be saved to the given file.
   </para>
   <para>
    Note that options <option>--genpairs</option> and
    <option>--usepairs</option> may be used to split a census into smaller
    pieces to be run simultaneously on different machines.  See also the
    <link
     linkend="man-tricensus-manager"><command>tricensus-manager</command></link>
    utility, which can help coordinate these simultaneous processes.
   </para>
   <warning><para>
    A census with even a relatively small number of tetrahedra can
    take an incredibly long time to run and chew up massive amounts of
    memory.  It is recommended that you try very small censuses to begin
    with (such as 3 or 4 tetrahedra) and work upwards to establish the
    limits relative to your machine.
   </para></warning>
  </refsect1>

  <refsect1>
   <title>Options</title>
   <variablelist>
    <varlistentry>
     <term><option>-t,
      --tetrahedra=</option><replaceable>tetrahedra</replaceable></term>
     <listitem>
      <para>
       Specifies the number of tetrahedra used to build the triangulations.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-b, --boundary</option></term>
     <listitem>
      <para>
       Only produce triangulations with at least one boundary face.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-i, --internal</option></term>
     <listitem>
      <para>
       Only produce triangulations with all faces internal (i.e., with no
       boundary faces).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-B,
      --bdryfaces=</option><replaceable>faces</replaceable></term>
     <listitem>
      <para>
       Only produce triangulations with the precise number of boundary
       faces specified.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-o, --orientable</option></term>
     <listitem>
      <para>
       Only produce orientable triangulations.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-n, --nonorientable</option></term>
     <listitem>
      <para>
       Only produce non-orientable triangulations.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-f, --finite</option></term>
     <listitem>
      <para>
       Only produce finite triangulations (triangulations with no
       ideal vertices).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-d, --ideal</option></term>
     <listitem>
      <para>
       Only produce triangulations with at least one ideal vertex.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-m, --minimal</option></term>
     <listitem>
      <para>
       Do not include triangulations that are obviously non-minimal.
      </para>
      <para>
       A series of short tests will be run on each triangulation produced;
       if a triangulation is found to be non-minimal it will not be placed
       in the census.
      </para>
      <para>
       Note that these tests are not capable of deciding that a
       triangulation <emphasis>is</emphasis> minimal; at best the results
       will be inconclusive (in which case the triangulation will be placed
       in the census anyway).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-M, --minprime</option></term>
     <listitem>
      <para>
       Do not include triangulations that are obviously non-minimal,
       non-prime and/or disc-reducible.
      </para>
      <para>
       This option can significantly speed up the census and vastly
       reduce the final number of triangulations produced.
      </para>
      <para>
       A triangulation satisfying any of the above conditions might be
       left out of the census, although not all such triangulations will
       be ignored.  What <emphasis>is</emphasis> guaranteed is that any
       triangulation that is minimal, prime and disc-irreducible will
       certainly be included in the census.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-p, --genpairs</option></term>
     <listitem>
      <para>
       Only generate face pairings, not triangulations.
      </para>
      <para>
       The outermost layer of the census code involves pairing off the
       faces of the individual tetrahedra without actually determining
       the corresponding gluing permutations.  For each face pairing
       produced, all possible sets of gluing permutations are then generated
       and corresponding triangulations created.
      </para>
      <para>
       Face pairing generation consumes a very small fraction of the
       total census runtime, and effectively divides the census into
       multiple pieces.  By using this option, one can quickly generate
       a complete list of possible face pairings and then feed subsets of
       this list to different machines to work on simultaneously in order
       to produce an overall census of triangulations.  See the
       <link linkend="man-tricensus-manager"><command>tricensus-manager</command></link>
       utility for assistance in coordinating these simultaneous processes.
      </para>
      <para>
       The list of all face pairings will be written to the given output
       file in text format (although in the special case of face pairing
       generation you may omit the output file from the command-line, in
       which case the pairings will be written to standard output).
       This program can then be run with option <option>--usepairs</option>
       to generate the actual triangulations corresponding to different
       subsets of these face pairings.
      </para>
      <para>
       Note that orientability, finiteness or minimality options may not be
       supplied with this option; they should instead be supplied when option
       <option>--usepairs</option> is used to process each subset of face
       pairings.
      </para>
      <para>
       Note also that when this option is used no progress reporting will
       take place (although the face pairings should be generated
       sufficiently quickly that the output file itself can be used to
       track the state of progress).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>-P, --usepairs</option></term>
     <listitem>
      <para>
       Use only the given subset of face pairings to build the triangulations.
      </para>
      <para>
       Face pairings should be supplied on standard input, one per line.
       They should be listed in the format produced by option
       <option>--genpairs</option>.
      </para>
      <para>
       This option is used to run only a subset of a particular census.  See
       option <option>--genpairs</option> for further details on how to split
       a census into subsets to run simultaneously on different machines.
       See also the
       <link linkend="man-tricensus-manager"><command>tricensus-manager</command></link>
       utility, which can help coordinate these simultaneous processes.
      </para>
      <para>
       Note that tetrahedron or boundary options may not be supplied with
       this option; they should instead be supplied when option
       <option>--genpairs</option> is used to split the full census into
       pieces.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </refsect1>

  <refsect1>
   <title>See Also</title>
   <para>
    <link linkend="man-sigcensus">sigcensus</link>,
    <link linkend="man-tricensus-manager">tricensus-manager</link>,
    <link linkend="man-regina">regina</link>
     (<link linkend="man-regina">regina-normal</link> on some systems).
   </para>
  </refsect1>

  <refsect1>
   <title>Author</title>
   <para>
    &regina; was written by &regauthorplain; with help from others;
    see the documentation for full details.
    You can contact me at &regemail;.
   </para>
  </refsect1>
 </refentry>

 <!-- Triangulation Census Manager -->

 <refentry id="man-tricensus-manager">
  <refmeta>
   <refentrytitle>tricensus-manager</refentrytitle>
   <manvolnum>1</manvolnum>
  </refmeta>

  <refnamediv>
   <refname>tricensus-manager</refname>
   <refpurpose>Distribute a triangulation census amongst several
    machines</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
   <cmdsynopsis>
    <command>tricensus-manager</command>
    <arg><replaceable>tricensus-options</replaceable></arg>
    <arg choice=req><replaceable>pairs-file-prefix</replaceable></arg>
   </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
   <title>Description</title>
   <para>
    Allows multiple processes, possibly running on different machines, to
    collaborate in forming a census of 3-manifold triangulations.
   </para>
   <para>
    Census generation should take place in a single directory; if the
    census is to be distributed amongst different machines, this directory
    should be on a filesystem to which they all have access.
   </para>
   <para>
    In preparing a census to be distributed amongst several processes or
    machines, it should first be split into several smaller pieces.
    Running <link linkend="man-tricensus"><command>tricensus</command></link>
    with option <option>--genpairs</option> (which is quite fast) will create
    a list of face pairings, each of which must be analysed in order to
    complete the census.  The census is split into pieces by subdividing
    this list of face pairings.
   </para>
   <para>
    A common file prefix (such as <filename>6-or</filename>) should be
    selected.  Each subset of face pairings should be stored (one face
    pairing per line) in a file whose name begins with this prefix and
    ends with <filename>.pairs</filename>.  For instance, if
    <command>tricensus</command> with option <option>--genpairs</option>
    produced 10 face pairings, these might be split into five files, each
    with two lines representing two of these face pairings, named
    <filename>6-or-0.pairs</filename>, <filename>6-or-1.pairs</filename>,
    <filename>6-or-2.pairs</filename>, <filename>6-or-3.pairs</filename> and
    <filename>6-or-4.pairs</filename> respectively.
   </para>
   <para>
    This <command>tricensus-manager</command> utility works as follows.
    It runs through all files beginning with the given prefix and ending
    in <filename>.pairs</filename>, and assumes each of these contains a
    subset of face pairings to process.  If a pairings file has already been
    taken by another process (i.e., if a corresponding time file such as
    <filename>6-or-3.time</filename> exists), it will be skipped.
    Otherwise the pairings file will be claimed by this process and the
    following actions will be taken.
   </para>
   <itemizedlist>
    <listitem>
     <para>
      This process will write its own time file (such as
      <filename>6-or-3.time</filename>) indicating which machine and
      which <command>tricensus-manager</command> process has claimed
      this particular subset of face pairings.
     </para>
    </listitem>
    <listitem>
     <para>
      Command <command>tricensus</command> will be run with this subset
      of face pairings to analyse (using option <option>--usepairs</option>).
      Any other options given on the <command>tricensus-manager</command>
      command-line will be passed directly through to
      <command>tricensus</command> (these might include orientability or
      minimality options, for instance).  The time at which this
      subcensus began will be noted in the time file.
     </para>
    </listitem>
    <listitem>
     <para>
      All output from the running subcensus will be redirected to a
      corresponding progress file (such as
      <filename>6-or-3.progress</filename>).  In particular, this allows
      the user at any given time to see which face pairings from this
      particular subset have been processed.
     </para>
    </listitem>
    <listitem>
     <para>
      When this particular subcensus is complete, the results will be
      saved in a corresponding topology data file (such as
      <filename>6-or-3.rga</filename>).  The time at which the subcensus
      finished will be noted in the time file.
     </para>
    </listitem>
    <listitem>
     <para>
      At this point <command>tricensus-manager</command> will move on
      and look for another subset of face pairings to process.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    Each <command>tricensus-manager</command> process will have at most
    one child <command>tricensus</command> process running at any given
    time.  Thus, for instance, if you have nine machines (all with
    access to the common census directory) and you wish to have two
    census calculations running simultaneously on each of these
    machines, you should start <command>tricensus-manager</command>
    a total of 18 times, twice on each machine, each with an identical
    command-line.  These 18 simultaneous processes will then effectively
    divide up the overall census between them.
   </para>
   <para>
    Note that option <option>--usepairs</option> need not be given to
    <command>tricensus-manager</command>; this will be automatically
    supplied to each child <command>tricensus</command> process.
   </para>
   <para>
    Note also that topology data output filenames must not be given to
    <command>tricensus-manager</command> since these differ for each
    subcensus.  Topology data filenames will be automatically
    derived and supplied to each child <command>tricensus</command> process.
   </para>
  </refsect1>

  <refsect1>
   <title>See Also</title>
   <para>
    <link linkend="man-sigcensus">sigcensus</link>,
    <link linkend="man-tricensus">tricensus</link>,
    <link linkend="man-regina">regina</link>
     (<link linkend="man-regina">regina-normal</link> on some systems).
   </para>
  </refsect1>

  <refsect1>
   <title>Author</title>
   <para>
    &regina; was written by &regauthorplain; with help from others;
    see the documentation for full details.
    You can contact me at &regemail;.
   </para>
  </refsect1>
 </refentry>
</reference>
