.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "TRICENSUS-MPI" "1" "29 June 2005" "" "Specialised Utilities"

.SH NAME
tricensus-mpi \- Distribute a triangulation census amongst several    machines using MPI
.SH SYNOPSIS

\fBtricensus-mpi\fR [ \fB-o, --orientable\fR | \fB-n, --nonorientable\fR ] [ \fB-f, --finite\fR | \fB-d, --ideal\fR ] [ \fB-m, --minimal\fR | \fB-M, --minprime\fR | \fB-N, --minprimep2\fR ] \fB\fIpairs-file\fB\fR \fB\fIoutput-file-prefix\fB\fR

.SH "DESCRIPTION"
.PP
Allows multiple processes, possibly running on different machines, to
collaborate in forming a census of 3-manifold triangulations.
Coordination is done through MPI (the Message Passing Interface),
and the entire census is run as a single MPI job.
.sp
.RS
.B "Note:"
This program is well suited for running on a formal cluster-like
infrastructure.  For a more ad-hoc census manager that does not
rely on such infrastructure, see the
\fBtricensus-manager\fR
utility instead.
.RE
.PP
In preparing a census to be distributed amongst several processes or
machines, it should be possible to split the census into smaller pieces.
Running \fBtricensus\fR
with option \fB--genpairs\fR (which is quite fast) will create
a list of face pairings, each of which must be analysed in order to
complete the census.  The census is split into pieces by passing one
face pairing to each process at a time.
.sp
.RS
.B "Note:"
Whereas \fBtricensus-mpi\fR uses a single large face
pairings file (with MPI handling the distribution of pairings to
individual processes),
the alternative \fBtricensus-manager\fR
uses many small face pairings files (with individual processes
claiming individual files to work on).
.RE
.PP
The full list of face pairings should be stored in a single file,
which is passed on the command-line as
\fIpairs-file\fR\&.
This file must contain one face pairing per line, and each of these
face pairings must be in canonical form (i.e., must be a
minimal representative of its isomorphism class).  Note that the face
pairings generated by
\fBtricensus
--genpairs\fR will always satisfy these conditions.
.PP
This \fBtricensus-manager\fR utility works as follows.
One MPI process acts as the controller, and the remaining processes
each act as slaves.  The controller reads the list of face pairings
from \fIpairs-file\fR and farm these face
pairings out to the slaves for processing.  Each slave processes one
face pairing at a time, asking the controller for a new face pairing
when it is finished with a previous one.
.PP
The individual face pairings are numbered 1,2,... according to their
position in \fIpairs-file\fR\&.  A slave
processing face pairing #\fIk\fR will perform
the following tasks.
.TP 0.2i
\(bu
A time file is created with the name
\fIoutput-file-prefix_k\&.time\fR,
containing the specific face pairing being processed, as well as
which specific MPI process has taken the job and when.
.TP 0.2i
\(bu
The subcensus for this specific face pairing is run, and the
resulting triangulations are written to the topology data file
\fIoutput-file-prefix_k\&.rga\fR\&.
.TP 0.2i
\(bu
The time file is updated to include the time at which the subcensus
finished and how much CPU time it consumed.
.TP 0.2i
\(bu
The slave notifies the controller of the results and requests
another face pairing for processing.
.PP
All MPI processes use the same \fBtricensus-mpi\fR
command-line.  Their different roles are determined by their MPI
process rank (the controller is always the process with rank 0).
It should be possible to start all MPI processes using a single
command according to your specific MPI implementation.
.PP
The controller process keeps a log of which slaves are processing
which face pairings.  This log is written to the file
\fIoutput-file-prefix\&.log\fR\&.
.sp
.RS
.B "Tip:"
Once the census is complete, the
\fBregconcat\fR
command may be used to combine the many small topology data files
into one larger file for easier handling.
.RE
.SH "OPTIONS"
.PP
The census options accepted by \fBtricensus-mpi\fR
have identical behaviour to those same options when passed to
\fBtricensus\fR\&.  See the
\fBtricensus\fR reference
for details.
.PP
Note that some \fBtricensus\fR options are not
available here (e.g., tetrahedra and boundary options), since these must
be supplied earlier on when generating the initial list of face pairings
through \fBtricensus --genpairs\fR\&.
.SH "EXAMPLES"
.PP
Suppose we wish to form a census of all 5-tetrahedron closed
non-orientable triangulations, where the census is optimised for
prime minimal P2-irreducible triangulations (and in particular, some
triangulations that are not prime, minimal and P2-irreducible may be
left out).
.PP
We begin by using \fBtricensus\fR to generate a full
list of face pairings.

.nf
    example$ \fBtricensus --genpairs -t 5 -i > 5.pairs\fR
    Total face pairings: 28
    example$
.fi
.PP
We now use \fBtricensus-mpi\fR to run the distributed
census.  A command such as \fBmpirun\fR can generally
be used to start the MPI processes, though this depends on your
specific MPI implementation.  The command for running a distributed
census on 10 processors for the \fBMPICH\fR implementation of MPI is as
follows.

.nf
    example$ \fBmpirun -np 10 /usr/bin/tricensus-mpi -Nnf 5.pairs 5-nor\fR
    example$
.fi
.PP
The current state of processing can be seen in the controller log
\fI5-nor.log\fR and in the individual time files
\fI5-nor_1.time\fR, ..., \fI5-nor_28.time\fR\&.
The resulting triangulations are saved in the files
\fI5-nor_1.rga\fR, ..., \fI5-nor_28.rga\fR\&.
.SH "SEE ALSO"
.PP
regconcat,
sigcensus,
tricensus,
tricensus-manager,
regina-kde\&.
.SH "AUTHOR"
.PP
\fBRegina\fR was written by Ben Burton <bab@debian.org> with help from others;
see the documentation for full details.
