#!/bin/sh
# Script include file for regina.
# Reads runtime options and sets reasonable defaults.

# Begin guard
if [ "$read_regscript_opt" != 1 ]; then
read_regscript_opt=1

# ---------- Constants ----------

# File in each options directory containing runtime options.
runtime_options=regina.conf

# ---------- Find options directories ----------

# --- Global options directory ---

# Use default if nothing is specified.
default_options_global="/etc/$REGINA_PACKAGE"
if [ ! -e "$default_options_global" ]; then
    export default_options_global="$REGINA_HOME"
fi
if [ -z "$REGINA_OPTIONS_GLOBAL" ]; then
    export REGINA_OPTIONS_GLOBAL="$default_options_global"
fi

# Use nothing if it's not a directory.
if [ ! -z "$REGINA_OPTIONS_GLOBAL" ]; then
    if [ ! -d "$REGINA_OPTIONS_GLOBAL" ]; then
        if [ ! -e "$REGINA_OPTIONS_GLOBAL" ]; then
            info "Warning: $REGINA_OPTIONS_GLOBAL does not exist."
        else
            warn "Warning: $REGINA_OPTIONS_GLOBAL exists but is not a directory."
        fi
        export REGINA_OPTIONS_GLOBAL=
    fi
fi

if [ -n "$REGINA_OPTIONS_GLOBAL" ]; then
    info "-- Global options directory (REGINA_OPTIONS_GLOBAL): $REGINA_OPTIONS_GLOBAL"
fi

# --- Local options directory ---

# Use default if nothing is specified.
# Make sure we work around old shells that don't understand ~.
if [ ! -z "$HOME" ]; then
    default_options_local="`echo "$HOME/.regina"`"
else
    default_options_local="`echo ~/.regina`"
fi
if [ -z "$REGINA_OPTIONS_LOCAL" ]; then
    export REGINA_OPTIONS_LOCAL="$default_options_local"
fi

# If it does exist, use nothing if it's not a directory.
# If it doesn't exist, try to create it.
if [ ! -z "$REGINA_OPTIONS_LOCAL" ]; then
    if [ ! -e "$REGINA_OPTIONS_LOCAL" ]; then
        if ! mkdir "$REGINA_OPTIONS_LOCAL"; then
            warn "Warning: $REGINA_OPTIONS_LOCAL could not be created."
            export REGINA_OPTIONS_LOCAL=
        fi
    elif [ ! -d "$REGINA_OPTIONS_LOCAL" ]; then
        warn "Warning: $REGINA_OPTIONS_LOCAL exists but is not a directory."
        export REGINA_OPTIONS_LOCAL=
    fi
fi

# Warn the user if we have no local options directory.
if [ -n "$REGINA_OPTIONS_LOCAL" ]; then
    info "-- Local options directory (REGINA_OPTIONS_LOCAL): $REGINA_OPTIONS_LOCAL"
fi

# ---------- Read options files ----------

# Read the local runtime options file.
if [ ! -z "$REGINA_OPTIONS_LOCAL" ]; then
    options="$REGINA_OPTIONS_LOCAL/$runtime_options"
    if [ -f "$options" ]; then
        optioncmds=`awk -f "$REGINA_HOME/scripts/regscript_readopts" "$options"`
        eval $optioncmds;
    elif [ -e "$options" ]; then
        warn "Warning: Options file [$options] is not a regular file."
    fi
fi

# Read the global runtime options file.
if [ ! -z "$REGINA_OPTIONS_GLOBAL" ]; then
    options="$REGINA_OPTIONS_GLOBAL/$runtime_options"
    if [ -f "$options" ]; then
        optioncmds=`awk -f "$REGINA_HOME/scripts/regscript_readopts" "$options"`
        eval $optioncmds;
    elif [ -e "$options" ]; then
        warn "Warning: Options file [$options] is not a regular file."
    fi
fi

# ---------- Set defaults and run sanity checks ----------

if [ -z "$REGINA_PYTHON" ]; then
    # Take the Python interpreter from the path.
    export REGINA_PYTHON=`which python`
    if [ -z "$REGINA_PYTHON" ]; then
        error "Error: A Python interpreter could not be found."
        error "       Set \$REGINA_PYTHON to a Python interpreter (such as /usr/bin/python)"
        error "       and try again."
        exit 1
    fi
fi

if [ -z "$REGINA_PYLIBDIR" ]; then
    if [ "$REGINA_FROMSOURCE" = "1" ]; then
        export REGINA_PYLIBDIR="$REGINA_HOME/python/.libs"
    else
        export REGINA_PYLIBDIR="$REGINA_PKGLIBDIR/python"
    fi
fi
if [ ! -d "$REGINA_PYLIBDIR" ]; then
    error "Error: \$REGINA_PYLIBDIR is not set to a directory."
    error "       It should be set to the full pathname of the directory"
    error "       containing the calculation engine module 'regina.so'."
    error "       Please fix this setting and try again."
    exit 1
elif [ ! -f "$REGINA_PYLIBDIR/regina.so" ]; then
    error "Error: The calculation engine module 'regina.so' could not be found."
    error "       Please set \$REGINA_PYLIBDIR to the directory containing"
    error "       the module 'regina.so' and try again."
    exit 1
fi

# ---------- Output current options ----------

info ""
info "----- Configuration options -----"
info "-- Python interpreter (REGINA_PYTHON): $REGINA_PYTHON"
info "-- Python library directory (REGINA_PYLIBDIR): $REGINA_PYLIBDIR"
info ""

# ---------- Export current options ----------

export REGINA_PYTHON
export REGINA_PYLIBDIR

# End guard
fi

